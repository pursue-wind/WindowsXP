tionSvc_NextBtnHandler()
{
    g_Activation_CODE_ENTERED = g.ActCodeBox1.value + '-' +
        g.ActCodeBox2.value + '-' +
        g.ActCodeBox3.value + '-' +
        g.ActCodeBox4.value + '-' +
        g.ActCodeBox5.value + '-' +
        g.ActCodeBox6.value + '-' +
        g.ActCodeBox7.value;

    g_ConfirmID_A  = g.ActCodeBox1.value;
    g_ConfirmID_B  = g.ActCodeBox2.value;
    g_ConfirmID_C  = g.ActCodeBox3.value;
    g_ConfirmID_D  = g.ActCodeBox4.value;
    g_ConfirmID_E  = g.ActCodeBox5.value;
    g_ConfirmID_F  = g.ActCodeBox6.value;
    g_ConfirmID_G  = g.ActCodeBox7.value;

    try
    {
        g_Activation_CODE_ENTERED_status = window.external.SetConfirmationID(g_Activation_CODE_ENTERED);
    }
    catch(e)
    {
        g_Activation_CODE_ENTERED_status = 0;
    }

    DisableAllButtons();
    if (g_Activation_CODE_ENTERED_status == 0)
    {
        GoNavigate(CKPT_DONE);
    }
    else
    {
        g_Load_InstallID = false;
        var L_ConfirmIDInvalid_Text = "ämîF ID Ç™ñ≥å¯Ç≈Ç∑ÅBî‘çÜÇämîFÇµÇƒÅAçƒééçsÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB";
        alert(L_ConfirmIDInvalid_Text);
        g_ActivSvc_Reload = false;
        GoNavigate(CKPT_ACTIVSVC);
    }
}

function ActivationSvc_ProdkeyBtnHandler()
{
    DisableAllButtons();
    ReturnToTelephonePage = true;
    g_Load_InstallID = false;

    
    g_ConfirmID_A  = g.ActCodeBox1.value;
    g_ConfirmID_B  = g.ActCodeBox2.value;
    g_ConfirmID_C  = g.ActCodeBox3.value;
    g_ConfirmID_D  = g.ActCodeBox4.value;
    g_ConfirmID_E  = g.ActCodeBox5.value;
    g_ConfirmID_F  = g.ActCodeBox6.value;
    g_ConfirmID_G  = g.ActCodeBox7.value;

    g_ActivationStatus = ERR_ACT_DEDICATED_PID_ENTRY;
    GoNavigate(CKPT_ACT_MSG);
}

function PhoneCountries_Changed()
{
    g.ChosenPhoneNumber.innerHTML = "<B>" + g_Phone_Number_Array[g.selPhoneCountry.selectedIndex] + "</B>";
    g.ChosenTollNumber.innerHTML  = "<B>" + g_Toll_Number_Array[g.selPhoneCountry.selectedIndex]  + "</B>";

    
    g_Country_Selected_Index = g.selPhoneCountry.selectedIndex;
}

var g_Country_Selected_Index = 0;
var g_Phone_Number_Array = new Array(500);
var g_Toll_Number_Array =  new Array(500);
function GetPhoneCountries()
{
    var g_PhoneCountries = "";

    try
    {
        g_PhoneCountries = LangObj.get_PhoneCountries();

    }
    catch(e)
    {
        g_PhoneCountries = "API call error: get_PhoneCountries";
    }

    var i;
    var PhoneOption;
    var ModulusResult;
    var PhoneCounter=0;
    var TollCounter =0;
    var regexp1=/\t/;                                                
    var Opt_PhoneCountry_Array = g_PhoneCountries.split(regexp1);    
    var L_SelectYourLocation_Text = "èÍèäÇëIëÇµÇƒÇ≠ÇæÇ≥Ç¢";


    
    PhoneOption      = g.document.createElement("OPTION");
    PhoneOption.text = L_SelectYourLocation_Text;
    g.selPhoneCountry.add(PhoneOption);
    g_Toll_Number_Array[TollCounter] = "";
    g_Phone_Number_Array[PhoneCounter] = "";
    TollCounter = TollCounter + 1;
    PhoneCounter = PhoneCounter + 1;

    for(i=0; i < Opt_PhoneCountry_Array.length; i++)
    {
        ModulusResult = i % 3;
        if (ModulusResult == 0)
        {
            PhoneOption      = g.document.createElement("OPTION");
            PhoneOption.text = Opt_PhoneCountry_Array[i];
            g.selPhoneCountry.add(PhoneOption);
        }
        else if (ModulusResult == 1)
        {
            g_Toll_Number_Array[TollCounter] = Opt_PhoneCountry_Array[i];
            TollCounter = TollCounter + 1;
        }
        else
        {
            g_Phone_Number_Array[PhoneCounter] = Opt_PhoneCountry_Array[i];
            PhoneCounter = PhoneCounter + 1;
        }
    }
    g.ChosenPhoneNumber.innerHTML = "<B>" + g_Phone_Number_Array[g_Country_Selected_Index] + "</B>";
    g.ChosenTollNumber.innerHTML  = "<B>" + g_Toll_Number_Array[g_Country_Selected_Index]  + "</B>";
    g.selPhoneCountry.selectedIndex = g_Country_Selected_Index;

}

function BackBtnHandler()
{
    GoNavigate(CKPT_ACTIV);
}

var ReturnToTelephonePage = false;
var g_ConfirmID_A = "";
var g_ConfirmID_B = "";
var g_ConfirmID_C = "";
var g_ConfirmID_D = "";
var g_ConfirmID_E = "";
var g_ConfirmID_F = "";
var g_ConfirmID_G = "";
var g_Load_InstallID = true;
var g_Activation_Install_ID_Full = "";
function ActivationSvc_LoadMe()
{
    InitFrameRef();
    GetPageTitle();
    CheckContrastMode();

    ReturnToTelephonePage = false;


    
    g.ActCodeBox1.value = g_ConfirmID_A;
    g.ActCodeBox2.value = g_ConfirmID_B;
    g.ActCodeBox3.value = g_ConfirmID_C;
    g.ActCodeBox4.value = g_ConfirmID_D;
    g.ActCodeBox5.value = g_ConfirmID_E;
    g.ActCodeBox6.value = g_ConfirmID_F;
    g.ActCodeBox7.value = g_ConfirmID_G;


    
    if (g_CameFromFirstPage)
    {
        g.btnBack.style.display = "inline";
    }

    InitButtons();

    
    
    if (g_CameFromFirstPage)
    {
        g.btnBack.onclick = BackBtnHandler;
    }

    IsConfirmIDComplete();  
    GetPhoneCountries();

    g.btnProdkey.onclick = ActivationSvc_ProdkeyBtnHandler;
    g.btnProdkey.onmouseover = HandleButtonMouseOver;
    g.btnProdkey.onmouseout  = HandleButtonMouseOut;


    if (g_Country_Selected_Index==0)
    {
        g_FirstFocusElement = g.selPhoneCountry;
    }
    else if (!g.btnNext.disabled)
    {
        g_FirstFocusElement = g.btnNext;
    }
    else
    {
        g_FirstFocusElement = g.ActCodeBox1;
    }

    if (g_FirstFocusElement != null)
        window.setTimeout("DoFocus();",1000);
}






var g_Reg1RadioSticky = null;
function areg1_LoadMe()
{
    InitFrameRef();
    GetPageTitle();
    CheckContrastMode();

    if (g_Reg1RadioSticky == null)
        g.btnNext.disabled = true;
    else if (g_Reg1RadioSticky == 1)
        g.rb_reg_1.checked = true;
    else if (g_Reg1RadioSticky == 2)
        g.rb_reg_2.checked = true;

    InitButtons();

    if (g.btnNext.disabled)
        g_FirstFocusElement = g.btnBack;
    else
        g_FirstFocusElement = g.btnNext;
    window.setTimeout("DoFocus();",1500);
}

function WPA_Reg1RadioClicked()
{
    
    if(g.btnNext.disabled && (g.rb_reg_1.checked || g.rb_reg_2.checked))
    {
        if (g.rb_reg_1.checked)
            g_Reg1RadioSticky = 1;
        else if (g.rb_reg_2.checked)
            g_Reg1RadioSticky = 2;

        g.btnNext.disabled = false;
        g.btnNext.onclick = GoNext;
        g.btnNext.focus();
    }
}




var StateAbbrevs = new Array("","AL","AK","AZ","AR","CA","CO","CT","DC","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","PR","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY");
var FullStateNames = new Array("Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Washington, D.C.","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Puerto Rico","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming");
var ProvinceNames = new Array("","Alberta","British Columbia","Manitoba","New Brunswick","Newfoundland","Northwest Territories","Nova Scotia","Nunavut","Ontario","Prince Edward Island","Quebec","Saskatchewan","Yukon");


var g_StateName2IndexMap= new ActiveXObject("Scripting.Dictionary");
var g_ProvinceName2IndexMap= new ActiveXObject("Scripting.Dictionary");

g_ProvinceName2IndexMap.CompareMode = 1;  
g_StateName2IndexMap.CompareMode = 1;  


var ii;
for(ii=1;ii<=FullStateNames.length;ii++) {
    
  g_StateName2IndexMap.Add(FullStateNames[ii-1].toUpperCase(),ii);
  g_StateName2IndexMap.Add(StateAbbrevs[ii].toUpperCase(),ii);

  if(ii < ProvinceNames.length) {
     g_ProvinceName2IndexMap.Add(ProvinceNames[ii].toUpperCase(),ii);
  }
}

var L_Postal_Text = "*óXï÷î‘çÜ(<u>Z</u>):";
var L_AsteriskPostal_Text = "*óXï÷î‘çÜ(<u>Z</u>):";
var L_Province_Text= "ìsìπï{åß(<u>P</u>):";
var L_AsteriskProvince_Text= "*ìsìπï{åß(<u>P</u>):";

var L_Canada_Text="ÉJÉiÉ_";
var L_UnitedStates_Text="ïƒçë";

function Reg3UserCountryChanged() {

    


    g_Country=g.selCountry.options(g.selCountry.selectedIndex).text;

    if(g_Country == L_UnitedStates_Text) {
        if(g.selUSState.style.display!="inline") {
          g.selUSState.style.display="inline";
        }

        g.selCAProvince.style.display="none";
        g.UserStateTextBox.style.display="none";

        
        if(g.UserStateTextBox.value!="") {
          var res=g_StateName2IndexMap.Item(g.UserStateTextBox.value.toUpperCase());
          if(res!=null) {
             g.selUSState.selectedIndex=res;
          }
        }
        g.LabelZIP.innerHTML = L_AsteriskPostal_Text;
        g.StateLabel.innerHTML = L_AsteriskProvince_Text;
    } else if(g_Country == L_Canada_Text) {
        g.selUSState.style.display="none";
        g.selCAProvince.style.display="inline";
        g.UserStateTextBox.style.display="none";

        
        if(g.UserStateTextBox.value!="") {
          var res=g_ProvinceName2IndexMap.Item(g.UserStateTextBox.value.toUpperCase());
          if(res!=null) {
             g.selCAProvince.selectedIndex=res;
          }
        }
        g.LabelZIP.innerHTML = L_AsteriskPostal_Text;
        g.StateLabel.innerHTML = L_AsteriskProvince_Text;
    } else {
        g.selUSState.style.display="none";
        g.selCAProvince.style.display="none";
        g.UserStateTextBox.style.display="inline";
        g.LabelZIP.innerHTML = L_Postal_Text;
        g.StateLabel.innerHTML = L_Province_Text;
    }

    g_CountryIdx=g.selCountry.selectedIndex;

    Reg3UserStateChanged();
}

var L_FullName_Text="*éÅñº(<u>F</u>):";

function Reg3UserStateChanged() {

    

    

    if(g.selUSState.style.display!="none")
    {
        g_StateIdx=g.selUSState.selectedIndex;
        g_State=g.selUSState.options(g.selUSState.selectedIndex).text;
        g.StateLabel.htmlFor="selUSState";
    }
    else if (g.selCAProvince.style.display!="none")
    {
         g_StateIdx=g.selCAProvince.selectedIndex;
         g_State=g.selCAProvince.options(g.selCAProvince.selectedIndex).text;
         g.StateLabel.htmlFor="selCAProvince";
    }
    else
    {
        g_State = g.UserStateTextBox.value;
        g.StateLabel.htmlFor="UserStateTextBox";
    }
}




var g_FirstName=InfoObj.get_FirstName();

var g_LastName=InfoObj.get_LastName();
var g_Address1=InfoObj.get_Address1();
var g_Address2=InfoObj.get_Address2();
var g_City=InfoObj.get_City();
var g_ZipCode=InfoObj.get_Zip();
var g_EmailAddr= InfoObj.get_PrimaryEmail();
var g_Country=InfoObj.get_Country();
var g_CountryIdx=-1;
var g_State=InfoObj.get_State();
var g_StateIdx=0;

function Reg3SaveSettings() {
    g_FirstName=g.UserFirstName.value;
    

    if (IsKoreanLocale())
        g_LastName="";
    else
        g_LastName=g.UserLastName.value;

    g_Address1=g.UserAddress.value;
    g_Address2=g.UserAddress2.value;
    g_ZipCode=g.UserZipCode.value;
    g_EmailAddr=g.UserEmailAddress.value;
    g_City=g.UserCity.value;
    g_Country=g.selCountry.options(g.selCountry.selectedIndex).text;

    if(g.UserStateTextBox.style.display!="none")
    {
        g_State=g.UserStateTextBox.value;
    }
    else if (g.selUSState.style.display!="none")
    {
        g_State=g.selUSState.options(g.selUSState.selectedIndex).text;
    }
    else
    {
        g_State=g.selCAProvince.options(g.selCAProvince.selectedIndex).text;
    }

    InfoObj.set_FirstName(g_FirstName);
    InfoObj.set_LastName(g_LastName);
    
    InfoObj.set_Country(g_Country);
    InfoObj.set_State(g_State);
    InfoObj.set_Address1(g_Address1);
    InfoObj.set_Address2(g_Address2);
    InfoObj.set_PrimaryEmail(g_EmailAddr);
    InfoObj.set_Zip(g_ZipCode);
    InfoObj.set_City(g_City);

    TapiObj.set_CountryIndex(g.selCountry.selectedIndex);
    InfoObj.set_CountryID(TapiObj.get_CountryID());

    
    InfoObj.set_MSUpdate(true);

    InfoObj.set_MSOffer(false);
    if ((g_PostToMS==true) && (g.sharems.checked))
        InfoObj.set_MSOffer(true);

    InfoObj.set_OtherOffer(false);
    if ((g_PostToMS==true) && (g.sharemsPartners.checked))
        InfoObj.set_OtherOffer(true);
}


InfoObj.set_MSOffer(false);
InfoObj.set_OtherOffer(false);
function Reg3_LoadMe()
{
    InitFrameRef();
    CheckContrastMode();

    GetPageTitle();

    g_FirstFocusElement = g.UserFirstName;

    if (IsFarEastLocale())
    {

      


















        g.MainPageCell.style.display="none";  

        
        

        g.FieldTable.moveRow(1,0);  
        g.FieldTable.moveRow(6,2);  
        g.FieldTable.moveRow(6,3);  
        g.FieldTable.moveRow(6,4);  

        g.FE_ZIPLabel.innerHTML=g.LabelRight.innerHTML;
        g.FE_ZIPInput.innerHTML=g.MenuRight.innerHTML;
        g.FE_ZIPRow.style.display="inline";

        g.LabelRight.innerHTML="";
        g.MenuRight.innerHTML="";

        
        g.UserZipCode.size=30;
        g.UserZipCode.maxlength=120;

        g.UserStateTextBox.size=30;
        g.UserStateTextBox.maxlength=120;

        g_FirstFocusElement = g.UserLastName;

        if (IsKoreanLocale()) {
            g.LastNameRow.style.display="none";
            g.LabelFirstName.innerHTML=L_FullName_Text;
            g_FirstFocusElement = g.UserFirstName;
        }

        g.MainPageCell.style.display="inline";
    }

    
    g.selCountry.style.width=g.UserEmailAddress.offsetWidth;

    g.UserFirstName.value=g_FirstName;
    
    g.UserLastName.value=g_LastName;
    g.UserAddress.value=g_Address1;
    g.UserAddress2.value=g_Address2;
    g.UserZipCode.value=g_ZipCode;
    g.UserEmailAddress.value=g_EmailAddr;
    g.UserCity.value=g_City;

    
    
    

    g.selUSState.remove(0);

    for (var i = 0; i < StateAbbrevs.length; i++) {
       var oOption  = g.document.createElement("OPTION");
       oOption.text = StateAbbrevs[i];
       if (StateAbbrevs[i] == g_State)
       {
           g_StateIdx = i;
       }
       g.selUSState.add(oOption);
    }

    for (i = 0; i < ProvinceNames.length; i++) {
       oOption  = g.document.createElement("OPTION");
       oOption.text = ProvinceNames[i];
       if (ProvinceNames[i] == g_State)
       {
           g_StateIdx = i;
       }
       g.selCAProvince.add(oOption);
    }

    var fTapi = TapiObj.IsTAPIConfigured();  










    g_CountryIdx = TapiObj.get_CountryIndex();

    if(g_CountryIdx>=0)
    {
        g.selCountry.selectedIndex=g_CountryIdx;
        if(g_Country ==  L_UnitedStates_Text)
        {
            g.selUSState.selectedIndex=g_StateIdx;
        }
        else if(g_Country == L_Canada_Text)
        {
            g.selCAProvince.selectedIndex=g_StateIdx;
        }
        else
            g.UserStateTextBox.value=g_State;
    }
    else
    {
        
        g.selCountry.selectedIndex = TapiObj.get_CountryIndex();
    }

    Reg3UserCountryChanged();
    Reg3UserStateChanged();

    var MSoffer_Checked = InfoObj.get_MSOffer();
    if (MSoffer_Checked)
        g.sharems.checked = true;
    else
        g.sharems.checked = false;

    var MSotheroffer_Checked = InfoObj.get_OtherOffer();
    if (MSotheroffer_Checked)
        g.sharemsPartners.checked = true;
    else
        g.sharemsPartners.checked = false;

    InitButtons();

    g.error_mesg.innerHTML = L_RequiredField_Text;
    g.error_mesg.style.display="inline";

    var L_CNIL_Text = "<p>";
    var L_CnilStyleDisplay_Text = "none";

    g.cnil_mesg.innerHTML = L_CNIL_Text;
    g.cnil_mesg.style.display=L_CnilStyleDisplay_Text;

    window.setTimeout("DoFocus();",1000);
}
function GetCurrentProvince() {
    if(g.selCountry.options(g.selCountry.selectedIndex).text == L_UnitedStates_Text) {
        return g.selUSState.options(g.selUSState.selectedIndex).text;
    } else if(g.selCountry.options(g.selCountry.selectedIndex).text == L_Canada_Text) {
        return g.selCAProvince.options(g.selCAProvince.selectedIndex).text;
    } else return g.UserStateTextBox.value;
}

function GetCurrentCountry() {
    return g.selCountry.options(g.selCountry.selectedIndex).text;
}

var L_Email_Text="ê≥ÇµÇ¢ìdéqÉÅÅ[Éã ÉAÉhÉåÉXÇì¸óÕÇµÇƒÇ≠ÇæÇ≥Ç¢ÅBÇ‹ÇΩÇÕÅAìdéqÉÅÅ[ÉãÇÃÉ{ÉbÉNÉXÇãÛîíÇ…ÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB";
var L_EnterValid_Text=" * ïKê{çÄñ⁄ÇÇ∑Ç◊Çƒì¸óÕÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB";
var L_RequiredField_Text="* ïKê{çÄñ⁄ÇÕïKÇ∏ì¸óÕÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB";

var g_PostToMS = false;
var g_PostToOEM = false; 
var POST_TO_OEM = 1;
var POST_TO_MS = 2;
var bPostChkBxStateSaved = false;


function ShownavigatetoPrivacy()
{
    Navigate("actsetup\\aprvcyMS.htm");
    SetTimerShowIFrame(100);
}

function navigatetoPrivacy(PrivPage)
{
    if (g_CurrentCKPT == CKPT_REGISTER3)
       Reg3SaveSettings();

    if (g_CurrentCKPT == CKPT_REGISTER1)
    {
        if (g.rb_reg_1.checked)
            g_Reg1RadioSticky = 1;
        else if (g.rb_reg_2.checked)
            g_Reg1RadioSticky = 2;
        else
            g_Reg1RadioSticky = null;
    }

    ShowIFrame('False');
    window.setTimeout("ShownavigatetoPrivacy();",500);
}

function ShownavigatetoActPolicy()
{
    Navigate("actsetup\\apolicy.htm");
    SetTimerShowIFrame(100);
}

function navigatetoActPolicy()
{
    if (g.rb_act_1.checked)
        g_ActivationRadioSticky = 1;
    else if (g.rb_act_2.checked)
        g_ActivationRadioSticky = 2;
    else if (g.rb_act_3.checked)
        g_ActivationRadioSticky = 3;
    else
        g_ActivationRadioSticky = null;

    ShowIFrame('False');
    window.setTimeout("ShownavigatetoActPolicy();",500);
}

function VerifyReg3Fields() {
       g.error_mesg.style.display="none";
       var LastErrorField = null;

       var CurReg3ErrStringArray = new Array();

       
       

       if(g.UserEmailAddress.value != "") {
           
           
             var re = new RegExp("^\\s*\\S+@\\S+\\.\\S\\S+","");
             if(re.exec(g.UserEmailAddress.value) == null) {
                 LastErrorField = g.UserEmailAddress;
                 g.LabelEmail.className = "text-error";
             } else {
                 g.LabelEmail.className = "text-primary";
             }
       }

       var CurCountry=GetCurrentCountry();

       
       if ((CurCountry == L_UnitedStates_Text)||(CurCountry == L_Canada_Text)) {
          if(g.UserZipCode.value == "") {
            LastErrorField = g.UserZipCode;
            g.LabelZIP.className = "text-error";
          } else {
             g.LabelZIP.className = "text-primary";
          }

          if(GetCurrentProvince() == "") {
             if(g.selUSState.style.display!="none") {
                LastErrorField = g.selUSState;
             } else {
                LastErrorField = g.selCAProvince;
             }
             g.StateLabel.className = "text-error";

          } else {
             g.StateLabel.className = "text-primary";
          }
       }


       if(g.UserCity.value == "") {
          LastErrorField = g.UserCity;
          g.LabelCity.className = "text-error";
       } else {
          g.LabelCity.className = "text-primary";
       }

       if(g.UserAddress.value == "") {
          LastErrorField = g.UserAddress;
          g.LabelAddress.className = "text-error";
       } else {
          g.LabelAddress.className = "text-primary";
       }

       if((g.UserLastName.value == "") && (g.LastNameRow.style.display!="none")) {
          LastErrorField = g.UserLastName;
          g.LabelLastName.className = "text-error";
       } else {
          g.LabelLastName.className = "text-primary";
       }

       if(g.UserFirstName.value == "") {
          g.LabelFirstName.className = "text-error";
          LastErrorField = g.UserFirstName;
       } else {
          g.LabelFirstName.className = "text-primary";
       }

       if(LastErrorField==null) {
           return true;
       }

       

       if(LastErrorField==g.UserEmailAddress) {
          g.error_mesg.innerText = L_Email_Text;
       } else {
          g.error_mesg.innerText = L_EnterValid_Text;
       }

       g.error_mesg.className = "text-error";
       g.error_mesg.style.display="inline";

        try
        {
            g.btnNext.disabled=false;
        }
        catch(e) {}
        try
        {
            g.btnBack.disabled=false;
        }
        catch(e) {}
        try
        {
            g.btnSkip.disabled=false;
        }
        catch(e) {}
        InitButtons();

        LastErrorField.focus();

       return false;
}








function Start_CheckEnableNextButton()
{
    try
    {
        if (g.event == null)
            return;
    }
    catch(e)
    {
        return;
    }

    if (Start_CheckLengthRequirement() &&
        Start_CheckLengthNotEqualSpaces())
    {
        g.btnNext.disabled = false;
    }
    else
    {
        g.btnNext.disabled = true;
    }
    InitButtons();
}

function Start_CheckLengthRequirement()
{
    if ((g.edt_FirstName.value.length != 0) ||
         (g.edt_LastName.value.length != 0))
        return true;
    else
        return false;
}

function Start_CheckLengthNotEqualSpaces()
{
    if ((g.edt_FirstName.value.length != NumberOfSpaces(g.edt_FirstName.value)) ||
         (g.edt_LastName.value.length != NumberOfSpaces(g.edt_LastName.value)))
        return true;
    else
        return false;
}









function _Default_LoadMe(SimpleBack, SimpleNext)
{
    InitFrameRef();
    CheckContrastMode();

    if (g.btnNext != null)
        g_FirstFocusElement = g.btnNext;
    else if (g.btnSkip != null)
        g_FirstFocusElement = g.btnSkip;
    else if (g.btnBack != null)
        g_FirstFocusElement = g.btnBack;

    InitButtons(SimpleBack, SimpleNext);
    if (g_FirstFocusElement != null)
        window.setTimeout("DoFocus();",1000);
    else
        g.document.body.focus();
}


function New_Default_LoadMe(SimpleBack, SimpleNext)
{
    InitFrameRef();
    GetPageTitle();
    CheckContrastMode();

    if (g.btnNext != null)
        g_FirstFocusElement = g.btnNext;
    else if (g.btnSkip != null)
        g_FirstFocusElement = g.btnSkip;
    else if (g.btnBack != null)
        g_FirstFocusElement = g.btnBack;

    InitButtons(SimpleBack, SimpleNext);

    window.setTimeout("DoFocus();",1000);
}

















function InitCKPT()
{
    dnCKPT[CKPT_ACTIV]     = new CheckPoint("actsetup\\activ.htm",          0,     0,     0,     0);
    dnCKPT[CKPT_ACTDONE]   = new CheckPoint("actsetup\\actdone.htm",        0,     0,     0,     0);
    dnCKPT[CKPT_ACTIVERR]  = new CheckPoint("actsetup\\activerr.htm",       0,     0,     0,     0);
    dnCKPT[CKPT_ACTIVSVC]  = new CheckPoint("actsetup\\activsvc.htm",       0,     0,     0,     0);
    dnCKPT[CKPT_REGISTER1] = new CheckPoint("actsetup\\areg1.htm",          0,     0,     0,     0);
    dnCKPT[CKPT_REGISTER3] = new CheckPoint("actsetup\\ausrinfo.htm",       0,     0,     0,     0);
    dnCKPT[CKPT_ACTCONN]   = new CheckPoint("actsetup\\actconn.htm",        0,     0,     0,     0);
    dnCKPT[CKPT_ACTLAN]    = new CheckPoint("actsetup\\actlan.htm",         0,     0,     0,     0);
    dnCKPT[CKPT_REGDIAL]   = new CheckPoint("actsetup\\adrdyreg.htm",       0,     0,     0,     0);
    dnCKPT[CKPT_ACT_MSG]   = new CheckPoint("actsetup\\adeskerr.htm",       0,     0,     0,     0);
    dnCKPT[CKPT_DONE]      = new CheckPoint("actsetup\\aregdone.htm",       0,     0,     0,     0);
    dnCKPT[CKPT_STGACT]    = new CheckPoint("actsetup\\stgact.htm",         0,     0,     0,     0);
    PopCKPT();
}

function PushCKPT(ckpt)
{
  if (ckpt > 0 && ckpt < CKPT_MAX)
  {
    var tos = 0;
    try
    {
      tos = ApiObj.get_RegValue(HKEY_LOCAL_MACHINE, OOBE_MAIN_REG_KEY + CKPT_REG_KEY, TOS_REG_VALUE);
    }
    catch (e) {}
    ApiObj.set_RegValue(HKEY_LOCAL_MACHINE, OOBE_MAIN_REG_KEY + CKPT_REG_KEY, tos.toString(), ckpt);
    ApiObj.set_RegValue(HKEY_LOCAL_MACHINE, OOBE_MAIN_REG_KEY + CKPT_REG_KEY, TOS_REG_VALUE, ++tos);
    g_CurrentCKPT = ckpt;
  }
}

function PopCKPT(ckptCheck)
{
  var ckpt = 0;
  try
  {
    var tos = ApiObj.get_RegValue(HKEY_LOCAL_MACHINE, OOBE_MAIN_REG_KEY + CKPT_REG_KEY, TOS_REG_VALUE);
    if (tos > 0)
    {
      ckpt = ApiObj.get_RegValue(HKEY_LOCAL_MACHINE, OOBE_MAIN_REG_KEY + CKPT_REG_KEY, (tos - 1).toString());

      if (null == ckptCheck || ckpt == ckptCheck)
      {
        ApiObj.set_RegValue(HKEY_LOCAL_MACHINE, OOBE_MAIN_REG_KEY + CKPT_REG_KEY, TOS_REG_VALUE, --tos);
        ApiObj.DeleteRegValue(HKEY_LOCAL_MACHINE, OOBE_MAIN_REG_KEY + CKPT_REG_KEY, tos.toString());
      }
    }
  }
  catch (e) {}

  if (ckpt > 0 && ckpt < CKPT_MAX)
  {
    g_CurrentCKPT = ckpt;
  }
  else
    g_CurrentCKPT = null;
}

function URLFromCKPT(ckpt)
{
  var str = "";
  if (ckpt > 0 && ckpt < CKPT_MAX)
  {
    str = dnCKPT[ckpt].strURL;
  }
  return str;
}

function IndexFromCKPT(ckpt, status)
{
  var index = 0;
  if (ckpt > 0 && ckpt < CKPT_MAX)
  {
    var checkpoint = dnCKPT[ckpt];
    index = checkpoint.rgindex[status];
  }
  return index;
}



function IsLocalFile()
{
    try
    {
        return (-1 != g.location.protocol.indexOf("file"));
    }
    catch (e)
    {
        return false;
    }
}







function SetBack(strURL)
{
    g_OEMAddBackURL = strURL;
}

function GoCancel(ckpt)
{
    trace("GoCancel: CurrentCKPT = " + g_CurrentCKPT);

    try
    {
        if (IsLocalFile() && g.event == null)
            return;
    }
    catch(e)
    {
        return;
    }

    DisableAllButtons();

    switch (g_CurrentCKPT)
    {
        case CKPT_REGDIAL:
            if (InActivation_AppMode())
            {
                g_DoActivation = false;
                ShowIFrame('False');
                window.setTimeout("ExitWPA();",1000);
            }
            else
            {
                GoNavigate(CKPT_DONE);
            }
            break;
        case CKPT_REGISTER3:
            g_PostToMS = false;
            GoNavigate(CKPT_REGDIAL);
            break;

        case CKPT_ACTLAN:
            ActLan();
            break;
    }
}


function GoBack(ckpt)
{
    trace("GoBack: CurrentCKPT = " + g_CurrentCKPT);

    try
    {
        if (IsLocalFile() && g.event == null)
            return;
    }
    catch(e)
    {
        return;
    }

    DisableAllButtons();

    if (g_CurrentCKPT == g_DialCKPT)
        ResetDialing();

    if(g_CurrentCKPT == CKPT_REGISTER1)
    {
        if (g.rb_reg_1.checked)
            g_Reg1RadioSticky = 1;
        else if (g.rb_reg_2.checked)
            g_Reg1RadioSticky = 2;
        else
            g_Reg1RadioSticky = null;
    }

    if(g_CurrentCKPT == CKPT_REGISTER3)
    {
        Reg3SaveSettings();  
    }

    var ckptPrevious = g_CurrentCKPT;
    PopCKPT();

    if (ckptPrevious == g_CurrentCKPT)
    {
        
        PopCKPT();
    }

    if (g_CurrentCKPT > 0 && g_CurrentCKPT < CKPT_MAX)
    {
        GoNavigate(g_CurrentCKPT);
    }
}

function StatusNavigate()
{
    var iMove = IndexFromCKPT(g_CurrentCKPT, g_status) - window.external.get_StatusIndex;
    while (iMove > 0)
    {
        window.external.MoveNext();
        --iMove;
    }
    while (iMove < 0)
    {
        window.external.MovePrevious();
        ++iMove;
    }
}





function ShowGoNavigate()
{
var ckptGoHere = g_ckpt_target;
    switch (ckptGoHere)
    {
    case CKPT_REGDIAL:
        trace("GoNavigate: CKPT_REGDIAL");

        
        ResetConnectedToInternetEx();
        if (!ConnectedToInternetEx(true))
        {
            
            g_InitAutodial = window.external.InternetAutodial();

            if (!g_InitAutodial)
            {
                
                if (HasNetwork() && HasModem())
                {
                    GoNavigate(CKPT_ACTCONN);
                }
                else if (HasNetwork())
                {
                    GoNavigate(CKPT_ACTLAN);
                }
                else if (HasModem())
                {
                    PushCKPT(ckptGoHere);  
                    Navigate(URLFromCKPT(CKPT_REGDIAL));
                }
                else
                {
                    GoNavigate(CKPT_ACTIVERR);
                }

                SetTimerShowIFrame(15000);
                break;
            }
            else
            {
                g_Internet = INTERNET_YES;
            }
        }

        IcsConnect(ICS_CONN_TYPE_REG);
        SetTimerShowIFrame(ACTIVATION_TIMEOUT);
        break;

    case CKPT_ACT_MSG:
        trace("GoNavigate: CKPT_ACT_MSG");
        PushCKPT(ckptGoHere);  
        Navigate(URLFromCKPT(ckptGoHere));
        SetTimerShowIFrame(5000);
        break;

    default:
        trace("GoNavigate: default (" + ckptGoHere + " = " +
              URLFromCKPT(ckptGoHere) + ")");
        PushCKPT(ckptGoHere);  
        Navigate(URLFromCKPT(ckptGoHere));
        SetTimerShowIFrame(1200);
        break;
    }
}

var g_ckpt_target = null;
var g_AfterConnectionDone = false;
function GoNavigate(ckptGoHere)
{
    try
    {
        if (g_bStartup == false)
        {
            if (IsLocalFile())
            {
                if (g.event != null)
                {
                    g.event.returnValue = false;
                    g.event.cancelBubble = true;
                }
            }
        }
        else
            g_bStartup = false;

    }
    catch(e)
    {
        return;
    }

    g_ckpt_target = ckptGoHere;

    var L_GeneratingInstall_Text = "êVÇµÇ¢ÉCÉìÉXÉgÅ[Éã ID Çê∂ê¨ÇµÇƒÇ¢Ç‹Ç∑...";
    var L_RetrievingCountry_Text = "ÉCÉìÉXÉgÅ[Éã ID ÇéÊìæÇµÇƒÇ¢Ç‹Ç∑...";
    var L_ValidatingConn_Text    = "ÉâÉCÉZÉìÉXîFèÿÇämîFÇµÇƒÇ¢Ç‹Ç∑...";


    if (ckptGoHere==CKPT_REGDIAL)
    {
        ShowIFrame('False', L_CheckConnectivity_Text);
        Span_WPA_MainTitle.innerText = L_BlankTitle_Text;
    }
    else  if (ckptGoHere==CKPT_ACTIVSVC)
    {
        if (g_ActivSvc_Reload)
        {
            if (g_Load_InstallID)
                ShowIFrame('False', L_GeneratingInstall_Text);
            else
                ShowIFrame('False', L_RetrievingCountry_Text);

            Span_WPA_MainTitle.innerText = L_BlankTitle_Text;
        }
        else
        {
            g_ActivSvc_Reload = true;
        }
    }
    else if (ckptGoHere==CKPT_ACT_MSG)
    {
        if (g_AfterConnectionDone)
        {
            g_AfterConnectionDone = false;
            ShowIFrame('False', L_ValidatingConn_Text);
            Span_WPA_MainTitle.innerText = L_BlankTitle_Text;
        }
        else
            ShowIFrame('False');
    }
    else
    {
        ShowIFrame('False');
    }

    window.setTimeout("ShowGoNavigate();",500);
}

function ExitWPA()
{
    window.external.Finish();
}







function DisableAllButtons()
{
    g.document.body.style.cursor="wait";
    try
    {
        g.btnNext.className="buttons-disabled";
        g.btnNext.disabled=true;
    }
    catch(e) {}
    try
    {
        g.btnBack.className="buttons-disabled";
        g.btnBack.disabled=true;
    }
    catch(e) {}
    try
    {
        g.btnSkip.className="buttons-disabled";
        g.btnSkip.disabled=true;
    }
    catch(e) {}
    try
    {
        g.btnProdkey.className="buttons-disabled";
        g.btnProdkey.disabled=true;
    }
    catch(e) {}
    try
    {
        g.btnQuit.className="buttons-disabled";
        g.btnQuit.disabled=true;
    }
    catch(e) {}
    try
    {
        g.btnTelephone.className="buttons-disabled";
        g.btnTelephone.disabled=true;
    }
    catch(e) {}

}

function GoQuit()
{
    trace("GoQuit: CurrentCKPT = " + g_CurrentCKPT);

    
    
    DisableAllButtons();
    window.external.Finish();
}

function GoNext()
{
    trace("GoNext: CurrentCKPT = " + g_CurrentCKPT);
    
    try
    {
        if (IsLocalFile() && g.event == null)
            return;
    }
    catch(e)
    {
        return;
    }

    DisableAllButtons();

    switch (g_CurrentCKPT)
    {
        case CKPT_ACTIV:
            if (g.rb_act_1.checked)
            {
                g_ActivationRadioSticky = 1;
                g_DoActivation = true;

                if (CheckForAnyConnection())
                {
                    if (TapiObj.IsTapiServiceRunning())
                    {
                        GoNavigate(CKPT_REGISTER1);
                    }
                    else
                    {
                        GoNavigate(CKPT_REGDIAL);
                    }
                }
                else
                {
                    g_PostToMS = false;
                    GoNavigate(CKPT_ACTIVERR);
                }
            }
            else if (g.rb_act_2.checked)
            {
                g_ActivationRadioSticky = 2;
                g_DoActivation = false;
                g_CameFromFirstPage = true;
                GoNavigate(CKPT_ACTIVSVC);
            }
            else
            {
                g_ActivationRadioSticky = 3;
                g_DoActivation = false;
                ShowIFrame('False');
                window.setTimeout("ExitWPA();",1000);
            }
            break;

        case CKPT_REGISTER1:
            if (g.rb_reg_1.checked)
            {
                g_Reg1RadioSticky = 1;
                g_PostToMS = true;
                GoNavigate(CKPT_REGISTER3);
            }
            else
            {
                g_Reg1RadioSticky = 2;
                g_PostToMS = false;
                GoNavigate(CKPT_REGDIAL);
            }
            break;

        case CKPT_ACTIVERR:
            GoNavigate(CKPT_ACTIVSVC);
            break;
        case CKPT_ACTIVSVC:
            GoNavigate(CKPT_DONE);
            break;
        case CKPT_REGISTER3:
            if(VerifyReg3Fields())
            {
                Reg3SaveSettings();
                GoNavigate(CKPT_REGDIAL);
            }
            break;
        case CKPT_ACTCONN:
            if (g.rb_conn_lan.checked)
            {
                g_ActConnRadioSticky = 1;
                GoNavigate(CKPT_ACTLAN);
            }
            else
            {
                g_ActConnRadioSticky = 2;
                PushCKPT(CKPT_REGDIAL);
                Navigate(URLFromCKPT(CKPT_REGDIAL));
            }
            break;
        case CKPT_ACTLAN:

            ProxySettingsObj.UseAuto = g.cb_auto_detect.checked;
            ProxySettingsObj.UseProxy = g.cb_use_proxy.checked;
            ProxySettingsObj.Server = g.txt_proxy_url.value;
            ProxySettingsObj.Port = g.txt_proxy_port.value;

            window.external.set_ProxySettings(
                ProxySettingsObj.UseAuto,
                ProxySettingsObj.UseScript,
                ProxySettingsObj.ScriptUrl,
                ProxySettingsObj.UseProxy,
                ProxySettingsObj.Server + ((ProxySettingsObj.Port == "") ? "" : (":" + ProxySettingsObj.Port))
                );

            ActLan();
            break;
        case CKPT_REGDIAL:
            GoNavigate(CKPT_DONE);
            break;
        case CKPT_STGACT:
            
        case CKPT_ACT_MSG:
            if ( g_ActivationStatus != ERR_ACT_SUCCESS )
            {
                GoNavigate(CKPT_ACTIVSVC);
                break;
            }
            
        case CKPT_DONE:
            window.external.Finish();
            break;

        default:
            
            break;
    }
}



function GoOffline()
{
    GoNext();
}



function SetLastButtonText()
{
    if (g.btnNext != null)
        g_LastButtonText = g.btnNextText;
    else if (g.btnBack != null)
        g_LastButtonText = g.btnBackText;
    else if (g.btnRestore != null)
        g_LastButtonText = g.btnRestoreText;
    else if (g.btnCancel != null)
        g_LastButtonText = g.btnCancelText;
}








function InitFrameRef()
{

    g_LastButtonText = null;
    g_FirstFocusElement = null;
    g_LastKeyDown = null;

    g = document.frames("msoobeMain");
    g.document.body.style.backgroundColor = "transparent";

    try
    {
        g.document.body.onkeydown = OnKeyDown;
        SetLastButtonText();
    }
    catch(e){}
}

function HideButtons(buttons)
{
    if (null != g.btnBack && (buttons & HIDE_BACK))
    {
        g.btnBack.Hide = true;
    }

    if (null != g.btnNext && (buttons & HIDE_NEXT))
    {
        g.btnNext.Hide = true;
    }


    if (null != g.spanCancel && (buttons & HIDE_CANCEL))
    {
        g.btnSkip.Hide = true;
    }

    if (null != g.spanRestore && (buttons & HIDE_RESTORE))
    {
        g.btnRestore.Hide = true;
    }

}

function HandleButtonMouseOver()
{


}

function HandleButtonMouseOut()
{


}

function InitButtons(SimpleBack, SimpleNext)
{
    if(g.btnSkip!=null) {
      g.btnSkip.onmouseover = HandleButtonMouseOver;
      g.btnSkip.onmouseout  = HandleButtonMouseOut;

      if(!g.btnSkip.disabled) {
          g.btnSkip.onclick = GoCancel;





          g.btnSkip.className="buttons";
      } else {
        g.btnSkip.className="buttons-disabled";
      }
    }

    if (g.btnNext != null)
    {
        g.btnNext.onmouseover = HandleButtonMouseOver;
        g.btnNext.onmouseout  = HandleButtonMouseOut;

        if (!g.btnNext.disabled)
        {
            if (SimpleNext == null)
            {
                g.btnNext.onclick = GoNext;
            }
            else
            {
                g.btnNext.onclick = SimpleNavNext;
            }
            g.btnNext.className="buttons";
        }
        else
        {
            g.btnNext.className="buttons-disabled";
        }
    }

    if (g.btnBack != null)
    {
        g.btnBack.onmouseover = HandleButtonMouseOver;
        g.btnBack.onmouseout  = HandleButtonMouseOut;

        if (!g.btnBack.disabled)
        {
            if (SimpleBack == null)
            {
                g.btnBack.onclick = GoBack;
            }
            else
            {
                g.btnBack.onclick = SimpleNavBack;
            }
            g.btnBack.className="buttons";
        }
        else
        {
            g.btnBack.className="buttons-disabled";
        }
    }

    try
    {
        if(g.btnQuit != null) {
          g.btnQuit.onmouseover = HandleButtonMouseOver;
          g.btnQuit.onmouseout  = HandleButtonMouseOut;


          if(g.btnQuit.disabled == false) {
              g.btnQuit.onclick = GoQuit;
              g.btnQuit.className="buttons";
          } else {
            g.btnQuit.className="buttons-disabled";
          }
        }
    } catch(e) {}

    window.setTimeout("EnableDefaultCursor();",500);
}

function EnableDefaultCursor()
{
    g.document.body.style.cursor="default";
}

var g_LastKeyDown = null;
function OnKeyDown()
{
    try
    {
        if (IsLocalFile() && g.event == null)
            return;
    }
    catch(e)
    {
        return;
    }

    if (g.event.altKey)
    {
        g_LastKeyDown = String.fromCharCode(g.event.keyCode);
        if (g_LastKeyDown != null)
            g_LastKeyDown = g_LastKeyDown.toUpperCase();
    }
    else
        g_LastKeyDown = null;
}


function KeyPressIsNumeric()
{
    try
    {
        if (IsLocalFile() && g.event == null)
            return;
    }
    catch(e)
    {
        return;
    }

    if (!IsNumeric(g.event.keyCode))
    {
        g.event.keyCode = 0;
        g.event.returnValue = false;
    }
}

function IsNumeric(keyCode)
{
    if ((keyCode >= 48)  && (keyCode <= 57))
        return true;
    else
        return false;
}

function IsSpecial(keyCode)
{














return false;
}

function KeyPressIsValid()
{
    try
    {
        if (IsLocalFile() && g.event == null)
            return;
    }
    catch(e)
    {
        return;
    }

    if (!IsAlpha(g.event.keyCode) &&
        !IsSpecial(g.event.keyCode) &&
        !IsNumeric(g.event.keyCode))
    {
        g.event.keyCode = 0;
        g.event.returnValue = false;
    }
}

function KeyPressIsAlpha()
{
    try
    {
        if (IsLocalFile() && g.event == null)
            return;
    }
    catch(e)
    {
        return;
    }

    if (!IsAlpha(g.event.keyCode))
    {
        g.event.keyCode = 0;
        g.event.returnValue = false;
    }
}

function IsAlpha(keyCode)
{












        return true;


}

function NumberOfSpaces(strValue)
{





    var iSpaceCount = 0;
    for (iPosition = 0; iPosition < strValue.length; iPosition ++)
    {
        if (strValue.charAt(iPosition) == ' ')
        {
            iSpaceCount++;
        }
    }
    return iSpaceCount;
}
function KeyCodeToUpper()
{
    var strKeyCode = String.fromCharCode(g.event.keyCode);
    strKeyCode = strKeyCode.toUpperCase();
    g.event.keyCode = strKeyCode.charCodeAt(0);
}



var vCurItem = 0;

function SetupPageLayout()
{
    var WPAWindowHeight = document.body.clientHeight;
    var WPAWindowWidth  = document.body.clientWidth;

    if(0 != window.external.Directions.get_AppMode())
    {
        document.all.ifrmMainFrame.style.height = WPAWindowHeight - 93;
        document.all.ifrmMainFrame.style.width  = WPAWindowWidth;
    }

    WPABackground.src = 'images/wpaback.jpg';
    WPAKey.src        = 'images/wpakey.jpg';
    WPATop.src        = 'images/wpatop.jpg';
    WPABottom.src     = 'images/wpabtm.jpg';
    WPAFlag.src       = 'images/wpaflag.jpg';

    WPABottom.style.top = WPAWindowHeight - 45;
    WPAKey.style.left   = WPAWindowWidth - 237;
    WPAKey.style.top    = WPAWindowHeight - 315;

}

function CheckForAnyConnection()
{
    var Capabilities = GetConnectionCapabilities();

    return (Capabilities != CONNECTIONTYPE_INVALID &&
            Capabilities != CONNECTIONTYPE_NONE);
}


var g_fSIFTimer = false;
var g_iSIFTimerID;
function SetTimerShowIFrame(iMilliSeconds)
{
    
    
    if (g_fSIFTimer)
    {
        try
        {
            window.clearTimeout(g_iSIFTimerID);
        }
        catch(e) {}
        g_fSIFTimer = false;
    }

    g_iSIFTimerID = window.setTimeout("ShowIFrame();", iMilliSeconds);
    g_fSIFTimer = true;
}

var g_ShowTransition = false;
function ShowIFrame(ShowIt, loadingstatus)
{
    
    if (g_fSIFTimer)
    {
        try
        {
            window.clearTimeout(g_iSIFTimerID);
        }
        catch(e) {}
        g_fSIFTimer = false;
    }

    if (g_ShowTransition)
    {
        WPATransContainer.filters[0].Apply();
    }

    if (ShowIt == null)
    {
        
        WPA_DIV2.style.visibility="visible";
        WPA_DIV1.style.visibility="hidden";
        PageStatus.style.visibility="hidden";
        WPAProgressbar.style.visibility = "hidden";

        if (g_ShowTransition)
        {
            WPATransContainer.filters[0].Play();
        }
    }
    else
    {
        
        WPA_DIV2.style.visibility="hidden";
        WPA_DIV1.style.visibility="visible";

        if (g_ShowTransition)
        {
            WPATransContainer.filters[0].Play();
        }

        
        if (loadingstatus!=null)
        {
            PageStatus.style.visibility="visible";
            PageStatus.innerHTML=loadingstatus;
            WPAProgressbar.style.visibility = "hidden";  
        }
        else
        {
            PageStatus.style.visibility="hidden";
            WPAProgressbar.style.visibility = "hidden";
        }
    }
}






function IsUsingStagingKey()
{
	var val = 0;
	try 
	{
		val = ApiObj.get_RegValue(HKEY_LOCAL_MACHINE, STAGING_REG_KEY,STAGING_REG_VALUE);
	}
	catch (e){}
	
	return (val == 1? true: false);
	
}

window.onresize = SetupPageLayout;
var g_Already_Activated;




var g_Using_Staging_Key = false;
var g_Activation_Key_Entered = false;

function InitApplication()
{

    
    window.external.ComputerNameChangeComplete(false);
    WPATransContainer.style.display="inline";

    try
    {
        g_Already_Activated = window.external.NeedActivation();
    }
    catch(e)
    {
        g_Already_Activated = 999;
    }

    g_Using_Staging_Key = IsUsingStagingKey();

    
    if (g_Already_Activated == 0)
    {
        
        SetupPageLayout();
        InitFrameRef();
        g_status = STATUS_OFF;
        g_DoActivation = false;
        InitCKPT();
        if (0 != DirObj.get_AppMode)
        {
            do
            {
                PopCKPT();
            }
            while (null != g_CurrentCKPT);
        }
        GoNavigate(CKPT_ACTDONE);
        SetTimerShowIFrame(900);
    }
    else if (g_Already_Activated == 999)
    {
        window.external.Finish();
    }
    else
    {
        SetupPageLayout();
        g_bStartup = true;
        InitFrameRef();
        GetConnectionCapabilities();
        g_status = STATUS_OFF;
        g_DoActivation = true;
        CheckForAnyConnection();
        InitCKPT();
        
        if (0 != DirObj.get_AppMode)
        {
            do
            {
                PopCKPT();
            }
            while (null != g_CurrentCKPT);
        }
        
        
        
        
        if ( g_Using_Staging_Key) {
            g_ActivationStatus = ERR_ACT_DEDICATED_PID_ENTRY;
            GoNavigate(CKPT_STGACT);
        }
        else
            GoNavigate(CKPT_ACTIV);
        SetTimerShowIFrame(900);
    }
}

function loadTransitionFilter()
{
    document.all.WPATransContainer.style.display = "none";
    document.all.WPATransContainer.style.position = "absolute";
    document.all.WPATransContainer.style.top = 0;
    document.all.WPATransContainer.style.left = 0;
    document.all.WPATransContainer.style.width = "100%";
    document.all.WPATransContainer.style.height = "100%";

    if ((window.screen.colordepth >= 16) && window.external.UseFadeEffect())
    {
        document.all.WPATransContainer.style.filter = "progid:DXImageTransform.Microsoft.Fade(duration=0.2,overlap=0.8)";

        try
        {
            if (WPATransContainer.filters[0])
            {
                g_ShowTransition = true;
            }
        }
        catch(e)
        {
        }
    }
}

</script>

</HEAD>

<BODY topMargin=0 bgcolor="#4E6FD6" leftMargin=0 onload="loadTransitionFilter();InitApplication();" scroll=no tabIndex=-1 rightMargin=0>
    <!-- WPA images, dynamic layout positioning will be done in SetupPageLayout() function  -->
    <IMG ID=WPABackground style="LEFT: 0px; TOP: 0px; POSITION: absolute; z-index:-99;" alt="">
    <IMG ID=WPAKey        style="LEFT: 0px; TOP: 0px; POSITION: absolute; z-index:-98;" alt="">
    <IMG ID=WPATop        style="LEFT: 0px; TOP: 0px; POSITION: absolute; z-index:-97;" alt="">
    <IMG ID=WPABottom     style="LEFT: 0px; TOP: 0px; POSITION: absolute; z-index:-96;" alt="">

    <!-- Don't alter this table structure. It's designed to support BiDi and Non-BiDi. -->
    <TABLE WIDTH="95%" BORDER=0 style="POSITION: absolute; LEFT: 20px; TOP: 0px;" CELLPADDING=0 CELLSPACING=0>
    <TR>
        <TD nowrap VALIGN=MIDDLE>
        <SPAN id=Span_WPA_MainTitle class="title" style="height: 28px;" tabIndex=-1>
        </SPAN>
        </TD>

        <TD WIDTH="99%">&nbsp;
        </TD>

        <TD VALIGN=TOP>
        <IMG ID=WPAFlag alt="">
        </TD>
    </TR>
    </TABLE>

    <span ID="WPATransContainer">

          <!-- First Content (by design, don't remove) -->
          <span ID="WPA_DIV1" STYLE="POSITION: absolute; left:0; top:0; width=100%; height=100%; background-Color: transparent;">
          <table border=0 width="100%" height="100%" class="text-primary">
          <tr>
              <td valign=middle align=center>
                  <span id=PageStatus></span>
                  <br>
                  <span id=WPAProgressbar style="visibility:hidden;"><img src="images/progress.gif"></span>
              </td>
          </tr>
          </table>
          </span>

          <!-- Actual Content -->
          <span id="WPA_DIV2" style="visibility: hidden; POSITION: absolute; LEFT: 0px; TOP: 48px; width=100%; height=100%;" tabIndex=-1>
          <IFRAME ALLOWTRANSPARENCY="true" frameBorder=no width="100%" height="100%" id=ifrmMainFrame name=msoobeMain src="about:blank" tabIndex=0></IFRAME>
          </span>
    </span>
</BODY>
</HTML>


<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=shift_jis"/>
    <title>out of box experience</title>
    <LINK REL="stylesheet" TYPE="text/css" HREF="oobestyl.css">
</head>

<body style="background-Color: transparent; background-repeat: no-repeat;" TABINDEX=-1
      onload="window.parent.New_Default_LoadMe('SimpleBack'); window.btnBack.focus(); window.parent.Agent_Activate('AutoUpdate2');"
      onunload="window.parent.Agent_Deactivate();">

<table border=0 cellpadding=0 cellspacing=0 width=100% height=100%><tr><td ID=leftmargincell width=7%></td>
<td ID=maincell valign=middle class="text-primary">
<br><br>

<span class="title"><ID id=msprvcy_str1>Windows Update ÉvÉâÉCÉoÉVÅ[Ç…ä÷Ç∑ÇÈê∫ñæ</ID></span>
<br><br>
<form name =myform>
<textarea id=privtext1 style="display:none">
ç≈èIçXêVì˙ : 2007 îN 12 åé

É}ÉCÉNÉçÉ\ÉtÉgÇ≈ÇÕÅAå¬êlèÓïÒÇÃï€åÏÇ…ìwÇﬂÇƒÇ¢Ç‹Ç∑ÅBÇ±ÇÃå¬êlèÓïÒï€åÏï˚êjÇ≈ÇÕÅAWindows Update Ç∆ Microsoft Update ÇÃóºÉTÅ[ÉrÉX (à»â∫ÅAÅuUpdate ÉTÅ[ÉrÉXÅv) Ç…Ç®ÇØÇÈÉfÅ[É^ÇÃé˚èWï˚ñ@Ç∆égópï˚ñ@Ç…Ç¬Ç¢Çƒê‡ñæÇµÇ‹Ç∑ÅBñ{ï˚êjÇÕÅAÇªÇÃëºÇÃÉIÉìÉâÉCÉìÇ‹ÇΩÇÕÉIÉtÉâÉCÉìÇÃ Microsoft ÉTÉCÉgÅAêªïiÅAÉTÅ[ÉrÉXÇ…ÇÕìKópÇ≥ÇÍÇ‹ÇπÇÒÅBÇ±ÇÃå¬êlèÓïÒï€åÏï˚êjÇÃç≈êVî≈ÇÕÅAÉIÉìÉâÉCÉìÇÃ http://go.microsoft.com/fwlink/?LinkId=50142 Ç…Ç†ÇÈ Update ÉTÅ[ÉrÉXÇÃå¬êlèÓïÒï€åÏï˚êjÇéQè∆ÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB

Update ÉTÅ[ÉrÉXÇ∆ÇÕ
ÅE	Windows Update ÇÕÅAWindows É\ÉtÉgÉEÉFÉAÇ∆ÅAÉfÉoÉCÉXêªë¢å≥Ç©ÇÁíÒãüÇ≥ÇÍÇÈÉhÉâÉCÉoÇ»Ç«ÅAÇªÇÃëºÇÃÉTÉ|Å[Ég É\ÉtÉgÉEÉFÉAÇÃÉ\ÉtÉgÉEÉFÉAçXêVÉvÉçÉOÉâÉÄÇíÒãüÇ∑ÇÈÉTÅ[ÉrÉXÇ≈Ç∑ÅB
ÅE	Microsoft Update ÇÕÅAè„ãLÇ…é¶ÇµÇΩ Windows çXêVÉvÉçÉOÉâÉÄÇÃÇŸÇ©Ç…ÅAMicrosoft Office Ç»Ç«ÇÃÇªÇÃëºÇÃÉ}ÉCÉNÉçÉ\ÉtÉgÇÃÉ\ÉtÉgÉEÉFÉAÇ…ëŒÇ∑ÇÈçXêVÉvÉçÉOÉâÉÄÇ‡íÒãüÇ∑ÇÈÉTÅ[ÉrÉXÇ≈Ç∑ÅB

Update ÉTÅ[ÉrÉXÇ≈óòópâ¬î\Ç»çXêVÉvÉçÉOÉâÉÄÇ…ÇÕÅAê≥ãKÇÃ Microsoft É\ÉtÉgÉEÉFÉAÇé¿çsÇµÇƒÇ¢ÇÈÇ±Ç∆Ç™ämîFÇ≥ÇÍÇΩÉÜÅ[ÉUÅ[Ç≈Ç»ÇØÇÍÇŒéÊìæÇ≈Ç´Ç»Ç¢Ç‡ÇÃÇ‡Ç†ÇËÇ‹Ç∑ÅBê≥ãKÇÃ Microsoft É\ÉtÉgÉEÉFÉAÇÃåüèÿÇ…Ç¬Ç¢ÇƒÇÕÅAhttp://go.microsoft.com/fwlink/?LinkId=83561 Ç…Ç†ÇÈï ÇÃå¬êlèÓïÒï€åÏï˚êjÇ…ãLç⁄Ç≥ÇÍÇƒÇ¢Ç‹Ç∑ÅB
Update ÉTÅ[ÉrÉXÇÕÅA2 Ç∆Ç®ÇËÇÃï˚ñ@Ç≈égópÇ≈Ç´Ç‹Ç∑ÅB
ÅE	Windows Update Ç‹ÇΩÇÕ Microsoft Update ÇÃ Web ÉTÉCÉgÇ…ÉAÉNÉZÉXÇ∑ÇÈ
ÅE	Microsoft Windows ÇÃ Windows é©ìÆçXêVã@î\ÇégópÇ∑ÇÈ

é˚èWÇ≥ÇÍÇÈÉfÅ[É^
Update ÉTÅ[ÉrÉXÇ≈ÇÕÅAñ{ÉTÅ[ÉrÉXÇÃâ^ópÇ®ÇÊÇ—â¸ëPÇÃÇΩÇﬂÇ…ÅAÇ®ãqólÇÃÉRÉìÉsÉÖÅ[É^Ç©ÇÁéüÇÃÇÊÇ§Ç»èÓïÒÇé˚èWÇµÇ‹Ç∑ÅB

ÅE	Update ÉTÅ[ÉrÉXÇ™çXêVÉvÉçÉOÉâÉÄÇégópÇ≈Ç´ÇÈÇÊÇ§Ç…Ç∑ÇÈ Microsoft É\ÉtÉgÉEÉFÉAÇ®ÇÊÇ—ÇªÇÃëºÇÃÉTÉ|Å[Ég É\ÉtÉgÉEÉFÉA (ÉfÉoÉCÉXêªë¢å≥Ç©ÇÁíÒãüÇ≥ÇÍÇÈÉhÉâÉCÉoÇ»Ç«)ÅBÇ±ÇÍÇÕÅAÇ®ãqólÇ…ç≈ìKÇ»çXêVÉvÉçÉOÉâÉÄÇîªífÇ∑ÇÈÇ§Ç¶Ç≈ñóßÇøÇ‹Ç∑ÅB
ÅE	çXêVÉvÉçÉOÉâÉÄÇé©ìÆìIÇ…É_ÉEÉìÉçÅ[ÉhÇ‹ÇΩÇÕÉCÉìÉXÉgÅ[ÉãÇ∑ÇÈÇ©Ç«Ç§Ç©Ç»Ç«ÅAWindows Update Ç‹ÇΩÇÕ Microsoft UpdateÅAÇ†ÇÈÇ¢ÇÕÇªÇÃóºï˚ÇÃç\ê¨ê›íËÅB
ÅE	Update ÉTÅ[ÉrÉXÇ…ÉAÉNÉZÉXÇ∑ÇÈÇ∆Ç´Ç‚égópÇ∑ÇÈÇ∆Ç´Ç…åoå±Ç∑ÇÈê¨å˜ÅAé∏îsÅAÇ®ÇÊÇ—ÉGÉâÅ[ÅB
ÅE	ÉnÅ[ÉhÉEÉFÉA ÉfÉoÉCÉXÇÃÉvÉâÉO ÉAÉìÉh ÉvÉåÉC ID î‘çÜÅBÉfÉoÉCÉXÇÃêªë¢å≥Ç…ÇÊÇ¡ÇƒäÑÇËìñÇƒÇÁÇÍÇÈÅAÉfÉoÉCÉX (ì¡íËÇÃéÌóﬁÇÃÉLÅ[É{Å[ÉhÇ»Ç«) ÇéØï Ç∑ÇÈÉRÅ[ÉhÇ≈Ç∑ÅB
ÅE	ÉOÉçÅ[ÉoÉãàÍà”éØï éq (GUID)ÅBÉâÉìÉ_ÉÄÇ…ê∂ê¨Ç≥ÇÍÇÈî‘çÜÇ≈Ç∑ÅBå¬êlèÓïÒÇÕä‹Ç›Ç‹ÇπÇÒÅBGUID ÇÕÅAÉÜÅ[ÉUÅ[Çì¡íËÇπÇ∏Ç…ÉRÉìÉsÉÖÅ[É^ÇéØï Ç∑ÇÈÇΩÇﬂÇ…égópÇ≥ÇÍÇ‹Ç∑ÅB
ÅE	BIOS ñºÅAÉäÉrÉWÉáÉìî‘çÜÅAÉäÉrÉWÉáÉìÇÃì˙ïtÅBÇ±ÇÍÇÕÅAÉnÅ[ÉhÉEÉFÉAÇÃÉeÉXÉgÅAÉRÉìÉsÉÖÅ[É^è„ÇÃÉIÉyÉåÅ[ÉeÉBÉìÉO ÉVÉXÉeÉÄÇÃãNìÆÅAÉRÉìÉsÉÖÅ[É^Ç…ê⁄ë±Ç≥ÇÍÇƒÇ¢ÇÈÉnÅ[ÉhÉEÉFÉA ÉfÉoÉCÉXä‘ÇÃÉfÅ[É^ì]ëóÇçsÇ§äÓñ{ìIÇ»É\ÉtÉgÉEÉFÉA ÉãÅ[É`ÉìÇ…ä÷Ç∑ÇÈèÓïÒÇ≈Ç∑ÅB
ÅE	ÉvÉçÉ_ÉNÉg IDÅBÇ∑Ç◊ÇƒÇÃ Microsoft êªïiÇ…ä‹Ç‹ÇÍÇƒÇ¢ÇÈÅAàÍà”ÇÃêªïiÉâÉCÉZÉìÉXéØï éqÇ≈Ç∑ÅB

Ç®ãqólÇ™ Update ÉTÅ[ÉrÉXÇégópÇ∑ÇÈÇ∆Ç´Ç…ÇÕÅAÇ±ÇÃÉTÅ[ÉrÉXÇ…ÇÊÇËÅAÇ®ãqólÇÃÉRÉìÉsÉÖÅ[É^Ç…ä÷Ç∑ÇÈÇ¢Ç≠Ç¬Ç©ÇÃèÓïÒ (à»â∫ÅAÅuïWèÄìIÇ»ÉRÉìÉsÉÖÅ[É^èÓïÒÅv) Ç™é˚èWÇ≥ÇÍÇ‹Ç∑ÅBïWèÄìIÇ»ÉRÉìÉsÉÖÅ[É^èÓïÒÇ…ÇÕÅAí èÌÅAÇ®ãqólÇ™Ç®égÇ¢ÇÃ IP ÉAÉhÉåÉXÅAÉIÉyÉåÅ[ÉeÉBÉìÉO ÉVÉXÉeÉÄÇÃÉoÅ[ÉWÉáÉìÅAÉuÉâÉEÉUÇÃÉoÅ[ÉWÉáÉìÅAÉnÅ[ÉhÉEÉFÉA ID (ÉfÉoÉCÉXêªë¢å≥ÅAÉfÉoÉCÉXñºÅAÉoÅ[ÉWÉáÉìÇé¶Ç∑)  Ç®ÇÊÇ—ínàÊÇ∆åæåÍÇÃê›íËÇ™ä‹Ç‹ÇÍÇ‹Ç∑ÅB

Update ÉTÅ[ÉrÉXÇ÷ÇÃÉAÉNÉZÉXÇ…ÅAWindows Update Ç‹ÇΩÇÕ Microsoft Update ÇÃ Web ÉTÉCÉgÇégópÇ∑ÇÈèÍçáÅAè„ãLÇÃèÓïÒÇ…â¡Ç¶ÅAâ{óóÇµÇΩÉyÅ[ÉWÇ®ÇÊÇ—çsÇ¡ÇΩëÄçÏÇ…ä÷Ç∑ÇÈèÓïÒÇ‡é˚èWÇ≥ÇÍÇ‹Ç∑ÅB

ÉfÅ[É^ÇÃóòópñ⁄ìI
Microsoft Ç…ëóêMÇ≥ÇÍÇΩÉfÅ[É^ÇÕÅAUpdate ÉTÅ[ÉrÉXÇÃâ^ópÇ®ÇÊÇ—ï€éÁÇ…égópÇ≥ÇÍÇ‹Ç∑ÅBÇ‹ÇΩÅAÇ±ÇÃÉfÅ[É^Ç…äÓÇ√Ç≠ëçìùåvÇê∂ê¨Ç∑ÇÈÇ±Ç∆Ç≈ÅAUpdate ÉTÅ[ÉrÉXÇä‹ÇﬁÉ}ÉCÉNÉçÉ\ÉtÉgÇÃêªïiÇ®ÇÊÇ—ÉTÅ[ÉrÉXÇÃåXå¸ÇÃï™êÕÇ®ÇÊÇ—å¸è„Ç…ñóßÇƒÇ‹Ç∑ÅB

ëçìùåvÇê∂ê¨Ç∑ÇÈÇΩÇﬂÇ…ÅAUpdate ÉTÅ[ÉrÉXÇ≈ÇÕé˚èWÇµÇΩ GUID ÇéüÇÃñ⁄ìIÇ…égópÇµÇ‹Ç∑ÅB

ÅE	Ç®ãqólÇ…Ç≈Ç´ÇÈå¿ÇËç≈çÇÇÃÉTÅ[ÉrÉXÇíÒãüÇ∑ÇÈÇΩÇﬂÇ…ÅAUpdate ÉTÅ[ÉrÉXÇ≈ÇÕÅAUpdate ÉTÅ[ÉrÉXÇégópÇ∑ÇÈå¬ÅXÇÃÉRÉìÉsÉÖÅ[É^ÇÃêîÇ∆ÅAì¡íËÇÃçXêVÉvÉçÉOÉâÉÄÇÃÉ_ÉEÉìÉçÅ[ÉhÇ∆ÉCÉìÉXÉgÅ[ÉãÇ™ê¨å˜ÇµÇΩÇ©Ç«Ç§Ç©Çí«ê’ÇµÇƒãLò^ÇµÇ‹Ç∑ÅBÇ≥ÇÁÇ…ÅAÉ_ÉEÉìÉçÅ[ÉhÇ∆ÉCÉìÉXÉgÅ[ÉãÇçsÇ§ÉRÉìÉsÉÖÅ[É^ÇÃ GUIDÅAóvãÅÇ≥ÇÍÇΩçÄñ⁄ÇÃ IDÅAçXêVÉvÉçÉOÉâÉÄÇ™óòópâ¬î\ÇæÇ¡ÇΩÇ©Ç«Ç§Ç©ÅAÇ®ãqólÇÃÉRÉìÉsÉÖÅ[É^ÇÃç\ê¨èÓïÒ (ÉIÉyÉåÅ[ÉeÉBÉìÉOÉVÉXÉeÉÄÇÃÉoÅ[ÉWÉáÉìÅAÉuÉâÉEÉUÇÃÉoÅ[ÉWÉáÉìÅAÉnÅ[ÉhÉEÉFÉA ID Ç»Ç«) ÇãLò^ÇµÇ‹Ç∑ÅB
ÅE	ÉwÉãÉvÇ‚ÉgÉâÉuÉãÉVÉÖÅ[ÉeÉBÉìÉOÇÃãLéñÇ™ñ‚ëËâåàÇ…ñóßÇ¡ÇΩÇ©Ç∆Ç¢Ç§éøñ‚Ç…Ç®ãqólÇ™ï‘éñÇÇµÇΩèÍçáÅAUpdate ÉTÅ[ÉrÉXÇÕÉRÉìÉsÉÖÅ[É^ÇÃ GUID ÇãLò^ÇµÇ‹Ç∑ÅBÇ±ÇÍÇ…ÇÊÇËÅAUpdate ÉTÅ[ÉrÉXÇ™ÇÊÇËóLâvÇ≈ä÷òAê´ÇÃÇ†ÇÈèÓïÒÇíÒãüÇ≈Ç´ÇÈÇÊÇ§Ç…Ç»ÇËÇ‹Ç∑ÅB

É}ÉCÉNÉçÉ\ÉtÉgÇÃÉ\ÉtÉgÉEÉFÉAÅAÉTÉCÉgÅAÉTÅ[ÉrÉXÇ…ÇÊÇ¡Çƒé˚èWÇ≥ÇÍÇΩèÓïÒÇÕÅAïƒçëÇ‹ÇΩÇÕÇªÇÃëºÇÃçëÇÃÉ}ÉCÉNÉçÉ\ÉtÉgÇ‹ÇΩÇÕÇªÇÃä÷òAâÔé–ÅAéqâÔé–ÅAÇ‹ÇΩÇÕàœëıêÊÇÃä«óùé{ê›Ç…Ç®Ç¢Çƒï€ë∂Ç≥ÇÍèàóùÇ≥ÇÍÇÈâ¬î\ê´Ç™Ç†ÇËÅAÇ®ãqólÇÕãèèZçëà»äOÇÃèÍèäÇ…èÓïÒÇ™ì]ëóÇ≥ÇÍÇÈÇ±Ç∆Ç…ìØà”Ç∑ÇÈÇ‡ÇÃÇ∆ÇµÇ‹Ç∑ÅBÉ}ÉCÉNÉçÉ\ÉtÉgÇÕÅAEU èîçëÇ©ÇÁÇÃÉfÅ[É^ÇÃé˚èWÅAégópÅAï€ë∂Ç…Ç¬Ç´ÅAçáèOçëè§ñ±è»Ç…ÇÊÇ¡ÇƒíËÇﬂÇÁÇÍÇΩ Safe Harbor ÉtÉåÅ[ÉÄÉèÅ[ÉNÇèÖéÁÇµÇƒÇ¢Ç‹Ç∑ÅBÉ}ÉCÉNÉçÉ\ÉtÉgÇ≈ÇÕÅAñ@ó•Ç…ÇÊÇ¡ÇƒäJé¶Ç™ïKóvÇ»èÍçáÅAÇ‹ÇΩÇÕéüÇÃñ⁄ìIÇ≈äJé¶çsà◊Ç™ïKóvÇæÇ∆çáóùìIÇ…îªífÇ≈Ç´ÇÈèÍçáÇ…ÇÕÅAå¬êlèÓïÒÇäJé¶Ç∑ÇÈÇ±Ç∆Ç™Ç†ÇËÇ‹Ç∑ÅB(a) ñ@ó•è„ÇÃóvêøÇ…âûÇ∂ÇÈÇΩÇﬂÅAÇ‹ÇΩÇÕÅAÉ}ÉCÉNÉçÉ\ÉtÉgÇ‹ÇΩÇÕìØÉTÉCÉgÇ…ëŒÇ∑ÇÈñ@ìIéËë±Ç´ÇèÖéÁÇ∑ÇÈÇΩÇﬂÅB(b) É}ÉCÉNÉçÉ\ÉtÉgÇÃå†óò (å_ñÒÇÃóöçsÇä‹Çﬁ) Çï€åÏÇ®ÇÊÇ—ñhå‰Ç∑ÇÈÇΩÇﬂÅB(c) É}ÉCÉNÉçÉ\ÉtÉgÇÃè]ã∆àıÇ‚ÅAÉ}ÉCÉNÉçÉ\ÉtÉgÇÃÉ\ÉtÉgÉEÉFÉAÇ‹ÇΩÇÕÉTÅ[ÉrÉXÇÃÉÜÅ[ÉUÅ[ÅAÇ‹ÇΩÇÕÇªÇÃëºàÍî ÇÃêlÅXÇÃå¬êlÇÃà¿ëSÇämï€Ç∑ÇÈÇ±Ç∆Çñ⁄ìIÇ∆ÇµÇƒãŸã}Ç≈çsìÆÇÇ∆ÇÈÇΩÇﬂÅB

É}ÉCÉNÉçÉ\ÉtÉgÇ≈ÇÕÅAÉJÉXÉ^É}Å[ ÉTÉ|Å[ÉgÅAéÊà¯ÇÃèàóùÅAÉåÉ|Å[ÉgÇÃìùåvï™êÕÇÃé¿çsÇ»Ç«ÅAì¡íËÇÃÉTÅ[ÉrÉXÇ…Ç®Ç¢ÇƒÅAëºé–Ç…ë„çsÇàÀóäÇ∑ÇÈèÍçáÇ™Ç†ÇËÇ‹Ç∑ÅBÇ±ÇÃÇÊÇ§Ç»èÍçáÇ…å¿ÇËÅAÉTÅ[ÉrÉXÇÃóöçsÇ…ïKóvÇ»èÓïÒÇÇªÇÃâÔé–Ç…íÒãüÇµÇ‹Ç∑ÅBÇΩÇæÇµÅAèÓïÒÇÃã@ñßê´ÇéÁÇÈÇ±Ç∆ÇïKóvèåèÇ∆ÇµÇƒÇ®ÇËÅAíÒãüÇµÇΩèÓïÒÇëºÇÃópìrÇ…égópÇ∑ÇÈÇ±Ç∆ÇÕã÷é~ÇµÇƒÇ¢Ç‹Ç∑ÅB
           </textarea>
			<textarea id=privtext2 style="display:none;">


ïKê{ÇÃçXêVÉvÉçÉOÉâÉÄ
Update ÉTÅ[ÉrÉXÇóLå¯Ç…ÇµÇΩèÍçáÅAUpdate ÉTÅ[ÉrÉXÇç\ê¨Ç∑ÇÈÇ‹ÇΩÇÕíºê⁄ä÷åWÇ∑ÇÈÉVÉXÉeÉÄè„ÇÃÉ\ÉtÉgÉEÉFÉA ÉRÉìÉ|Å[ÉlÉìÉgÇ™ìKêÿÇ…ã@î\Ç∑ÇÈÇ…ÇÕÅAèÌÇ…ç≈êVÇÃèÛë‘Ç…çXêVÇµÇƒÇ®Ç≠ïKóvÇ™Ç†ÇËÇ‹Ç∑ÅBÇ±ÇÍÇÁÇÃçXêVÉvÉçÉOÉâÉÄÇÕÅAÉTÅ[ÉrÉXÇ™ëºÇÃçXêVÉvÉçÉOÉâÉÄÇÃÉ`ÉFÉbÉNÅAÉ_ÉEÉìÉçÅ[ÉhÅAÇ®ÇÊÇ—ÉCÉìÉXÉgÅ[ÉãÇçsÇ§ëOÇ…é¿çsÇµÇƒÇ®Ç≠ïKóvÇ™Ç†ÇËÇ‹Ç∑ÅBÇ±ÇÍÇÁÇÃïKê{ÇÃçXêVÉvÉçÉOÉâÉÄÇÕÅAñ‚ëËÇèCïúÇµÅAåpë±ìIÇ…ã@î\Çå¸è„Ç≥ÇπÅAÉTÅ[ÉrÉXÇÉTÉ|Å[ÉgÇ∑ÇÈ Microsoft ÉTÅ[ÉoÅ[Ç∆ÇÃå›ä∑ê´Çà€éùÇµÇ‹Ç∑ÅBUpdate ÉTÅ[ÉrÉXÇ™ñ≥å¯ÇÃèÍçáÅAÇ±ÇÍÇÁÇÃçXêVÉvÉçÉOÉâÉÄÇéÛÇØéÊÇËÇ‹ÇπÇÒÅB

éüÇÃê›íËÇÃÇ¢Ç∏ÇÍÇ©ÇëIëÇ∆ÅAUpdate ÉTÅ[ÉrÉXÇ™óLå¯Ç…Ç»ÇËÇ‹Ç∑ÅB(i) [êÑèßÇ≥ÇÍÇÈçXêVÇé©ìÆìIÇ…É_ÉEÉìÉçÅ[ÉhÇµÅAéüÇÃéûçèÇ…ÉCÉìÉXÉgÅ[ÉãÇ∑ÇÈ]ÅA(ii) [çXêVÇé©ìÆìIÇ…É_ÉEÉìÉçÅ[ÉhÇ∑ÇÈÇ™ÅAÉCÉìÉXÉgÅ[ÉãÇÕéËìÆÇ≈é¿çsÇ∑ÇÈ]ÅAÇ‹ÇΩÇÕ (iii) [çXêVÇí ímÇ∑ÇÈÇÃÇ›Ç≈ÅAé©ìÆìIÇ»É_ÉEÉìÉçÅ[ÉhÇ‹ÇΩÇÕÉCÉìÉXÉgÅ[ÉãÇé¿çsÇµÇ»Ç¢]ÅB[é©ìÆçXêVÇñ≥å¯Ç…Ç∑ÇÈ] ÇëIëÇµÇΩèÍçáÅAUpdate ÉTÅ[ÉrÉXÇÕñ≥å¯Ç…Ç»ÇËÇ‹Ç∑ÅB

Update ÉTÅ[ÉrÉXÇóLå¯Ç…ÇµÇΩèÍçáÅAÉTÅ[ÉrÉXÇÃÉRÉìÉ|Å[ÉlÉìÉgÇ…ëŒÇ∑ÇÈçXêVÉvÉçÉOÉâÉÄÇÕÅAè„ãLÇÃÇ«ÇÃê›íËÇëIëÇµÇΩÇ©Ç…ä÷åWÇ»Ç≠ÅAí ímÇπÇ∏Ç…é©ìÆìIÇ…É_ÉEÉìÉçÅ[ÉhÇ®ÇÊÇ—ÉCÉìÉXÉgÅ[ÉãÇ≥ÇÍÇ‹Ç∑ÅBÉTÅ[ÉrÉX ÉRÉìÉ|Å[ÉlÉìÉgÇÃçXêVÉvÉçÉOÉâÉÄÇéÛÇØéÊÇÁÇ»Ç¢èÍçáÇÕÅAUpdate ÉTÅ[ÉrÉXÇñ≥å¯Ç…ÇµÇ‹Ç∑ÅB

Cookie Ç‹ÇΩÇÕÉgÅ[ÉNÉì
ÉgÅ[ÉNÉìÇÕ Cookie Ç…éóÇƒÇ¢Ç‹Ç∑ÅBÉgÅ[ÉNÉìÇÕèÓïÒÇï€ë∂Ç∑ÇÈè¨Ç≥Ç»ÉtÉ@ÉCÉãÇ≈ÅAUpdate ÉTÅ[ÉrÉXÇÃÉTÅ[ÉoÅ[Ç…ÇÊÇ¡ÇƒÇ®ãqólÇÃÉRÉìÉsÉÖÅ[É^ÇÃÉnÅ[Éh ÉfÉBÉXÉNè„Ç…îzíuÇ≥ÇÍÅAÇ®ãqólÇÃÉRÉìÉsÉÖÅ[É^Ç™ Update ÉTÅ[ÉrÉXÇÃÉTÅ[ÉoÅ[Ç…ê⁄ë±Ç∑ÇÈÇ∆Ç´Ç…ÅAóLå¯Ç»ê⁄ë±Çà€éùÇ∑ÇÈÇΩÇﬂÇ…égópÇ≥ÇÍÇ‹Ç∑ÅBÉgÅ[ÉNÉìÇÕÇ®ãqólÇÃÉRÉìÉsÉÖÅ[É^è„Ç…ÇÃÇ›ï€ë∂Ç≥ÇÍÅAÉTÅ[ÉoÅ[Ç…ÇÕï€ë∂Ç≥ÇÍÇ‹ÇπÇÒÅBCookie Ç‹ÇΩÇÕÉgÅ[ÉNÉìÇ…ÇÕÅAëOâÒÇÃÉXÉLÉÉÉìì˙éûÇ»Ç«ÅAç≈êVÇÃóòópâ¬î\Ç»çXêVÉvÉçÉOÉâÉÄÇåüçıÇ∑ÇÈÇÃÇ…ïKóvÇ»èÓïÒÇ™ä‹Ç‹ÇÍÇƒÇ¢Ç‹Ç∑ÅBÇ±ÇÃèÓïÒÇ…ÇÕÅAÉRÉìÉsÉÖÅ[É^Ç…É_ÉEÉìÉçÅ[ÉhÇ∑Ç◊Ç´ÉRÉìÉeÉìÉcÇ‚É_ÉEÉìÉçÅ[ÉhÇÃé¿çséûä˙Çä«óùÇ∑ÇÈÇΩÇﬂÇÃèÓïÒÇ…â¡Ç¶ÇƒÅAÇ®ãqólÇÃÉRÉìÉsÉÖÅ[É^ÇÉTÅ[ÉoÅ[Ç…éØï Ç≥ÇπÇÈÇΩÇﬂÇÃ GUID Ç‡ä‹Ç‹ÇÍÇ‹Ç∑ÅBCookie Ç‹ÇΩÇÕÉgÅ[ÉNÉìÇ…ä‹Ç‹ÇÍÇƒÇ¢ÇÈèÓïÒÇÕÅAÇªÇÃ Cookie Ç‹ÇΩÇÕÉgÅ[ÉNÉìÇÃóLå¯ä˙å¿ÇèúÇ´ÅAÉTÅ[ÉoÅ[Ç…ÇÊÇ¡ÇƒÇ∑Ç◊Çƒà√çÜâªÇ≥ÇÍÇ‹Ç∑ÅBÇ±ÇÃ Cookie Ç‹ÇΩÇÕÉgÅ[ÉNÉìÇÕÉuÉâÉEÉU Cookie Ç≈ÇÕÇ»Ç¢ÇÃÇ≈ÅAÇ®ãqólÇÃÉuÉâÉEÉUÇÃê›íËÇ…ÇÊÇ¡Çƒêßå‰Ç≈Ç´Ç‹ÇπÇÒÅBÇ‹ÇΩÅAçÌèúÇ∑ÇÈÇ±Ç∆Ç‡Ç≈Ç´Ç‹ÇπÇÒÅBÇΩÇæÇµÅAUpdate ÉTÅ[ÉrÉXÇégópÇµÇ»Ç¢èÍçáÇÕÅACookie Ç‹ÇΩÇÕÉgÅ[ÉNÉìÇÕégópÇ≥ÇÍÇ‹ÇπÇÒÅB

í≤ç∏Ç…Ç¬Ç¢Çƒ
èÍçáÇ…ÇÊÇ¡ÇƒÇÕÅAUpdate ÉTÅ[ÉrÉXÇÃégópï˚ñ@Ç…ä÷Ç∑ÇÈí≤ç∏Ç÷ÇÃéQâ¡Ç…Ç¬Ç¢ÇƒÇ®éfÇ¢Ç∑ÇÈÇ±Ç∆Ç™Ç†ÇËÇ‹Ç∑ÅBäeí≤ç∏Ç…ÇÕÅAÉvÉâÉCÉoÉVÅ[Ç…ä÷Ç∑ÇÈê∫ñæÇ™ä‹Ç‹ÇÍÅAÇ±ÇÃí≤ç∏Ç≈ëóêMÇ≥ÇÍÇΩèÓïÒÇÃégópèåèÇ∆égópñ@Ç…ä÷Ç∑ÇÈè⁄ç◊Ç™ãLç⁄Ç≥ÇÍÇƒÇ¢Ç‹Ç∑ÅB

Update ÉTÅ[ÉrÉXÇÃä«óù
Update ÉTÅ[ÉrÉXÇóòópÇ∑ÇÈÇ©Ç«Ç§Ç©ÇÕÇ®ãqólÇÃîCà”Ç≈Ç∑ÅBUpdate ÉTÅ[ÉrÉXÇ©ÇÁçXêVÉvÉçÉOÉâÉÄÇéÛêMÇ∑ÇÈÇ©Ç«Ç§Ç©ÇÕÇ®ãqólÇ™ëIëÇ≈Ç´Ç‹Ç∑ÅBéÛêMÇ∑ÇÈÉIÉvÉVÉáÉìÇëIëÇµÇΩèÍçáÇÕÅAé©ìÆìIÇ…É_ÉEÉìÉçÅ[ÉhÇ∑ÇÈÇ©Ç«Ç§Ç©ÅAÇ‹ÇΩÇÕ Update ÉTÅ[ÉrÉXÇ≈èdóvìxÇÃçÇÇ¢çXêVÉvÉçÉOÉâÉÄÇ‚ÉIÉvÉVÉáÉìÇÃçXêVÉvÉçÉOÉâÉÄÇ™åˆäJÇ≥ÇÍÇΩÇ∆Ç´Ç…í ímÇÃÇ›éÛêMÇ∑ÇÈÇ©Ç«Ç§Ç©ÇëIëÇ≈Ç´Ç‹Ç∑ÅB

Update ÉTÅ[ÉrÉXÇÃê›íËÇÕÅA[ÉXÉ^Å[Ég] ÉÅÉjÉÖÅ[ÇÃ Windows ÉZÉbÉgÉAÉbÉvÇégópÇµÇƒïœçXÇ≈Ç´Ç‹Ç∑ÅB[ÉXÉ^Å[Ég] É{É^ÉìÅA[ÉRÉìÉgÉçÅ[Éã ÉpÉlÉã]ÅA[é©ìÆçXêV] ÇÃèáÇ…ÉNÉäÉbÉNÇµÇ‹Ç∑ÅBUpdate ÉTÅ[ÉrÉX (è„ãLÇÃÉTÅ[ÉrÉX ÉRÉìÉ|Å[ÉlÉìÉgÇ®ÇÊÇ—ÉTÉ|Å[Ég ÉRÉìÉ|Å[ÉlÉìÉgÇ…ëŒÇ∑ÇÈïKê{ÇÃçXêVÉvÉçÉOÉâÉÄÇ»Ç«) Çñ≥å¯Ç…Ç∑ÇÈÇ…ÇÕÅA[é©ìÆçXêVÇñ≥å¯Ç…Ç∑ÇÈ] ÇÉNÉäÉbÉNÇµÇ‹Ç∑ÅB

Microsoft Update ÇóLå¯Ç…ÇµÇΩèÍçáÅAå„Ç©ÇÁñ≥å¯Ç…ÇµÇƒÅAWindows Update ÇÃÇ›ÇégópÇ∑ÇÈÇÊÇ§Ç…ñﬂÇ∑Ç±Ç∆Ç™Ç≈Ç´Ç‹Ç∑ÅBÇªÇÍÇ…ÇÕÅA[ÉXÉ^Å[Ég] É{É^ÉìÅA[Ç∑Ç◊ÇƒÇÃÉvÉçÉOÉâÉÄ] ÇÃèáÇ…ÉNÉäÉbÉNÇµÅA[Windows Update] Ç‹ÇΩÇÕ [Microsoft Update] ÇÉNÉäÉbÉNÇµÇ‹Ç∑ÅBÇ±ÇÃëÄçÏÇ…ÇÊÇËÅAMicrosoft Update ÇÃ Web ÉTÉCÉgÇ™ÉCÉìÉ^Å[ÉlÉbÉg ÉuÉâÉEÉUÇ≈äJÇ´Ç‹Ç∑ÅBWeb ÉTÉCÉgÇ≈ÅA[ê›íËÇÃïœçX] ÇÉNÉäÉbÉNÇµÇ‹Ç∑ÅBéüÇ…ÅA[Microsoft Update É\ÉtÉgÉEÉFÉAÇñ≥å¯Ç…ÇµÅAWindows Update ÇÃÇ›ÇégópÇ∑ÇÈ] ÇÉNÉäÉbÉNÇµÇ‹Ç∑ÅB

ÉZÉLÉÖÉäÉeÉBÇÃé¿ëH
É}ÉCÉNÉçÉ\ÉtÉgÇ≈ÇÕÅAé˚èWÇµÇΩèÓïÒÇÃÉZÉLÉÖÉäÉeÉBÇÃï€åÏÇ…ìwÇﬂÇƒÇ¢Ç‹Ç∑ÅBMicrosoft Update Service Ç≈ÇÕÅAèÓïÒÇïsê≥Ç»ÉAÉNÉZÉXÅAégópÅAÇ‹ÇΩÇÕäJé¶Ç©ÇÁï€åÏÇ∑ÇÈÇΩÇﬂÇ…ÅAÇ≥Ç‹Ç¥Ç‹Ç»ÉZÉLÉÖÉäÉeÉBãZèpÇ∆ï˚ñ@ÇégópÇµÇƒÇ¢Ç‹Ç∑ÅBÇΩÇ∆Ç¶ÇŒÅAÇ®ãqólÇÃÉRÉìÉsÉÖÅ[É^è„Ç…Ç†ÇÈÉ\ÉtÉgÉEÉFÉAÇì¡íËÇ∑ÇÈÇΩÇﬂÇ…ÉRÉìÉsÉÖÅ[É^ÇÉXÉLÉÉÉìÇ∑ÇÈÇ∆Ç´ÇÕÅASecure Socket Layer (SSL) ÉvÉçÉgÉRÉãÇ»Ç«ÇÃà√çÜâªãZèpÇégópÇµÇ‹Ç∑ÅBé˚èWÇ≥ÇÍÇΩèÓïÒÇÕÉTÅ[ÉoÅ[Ç…ï€ë∂Ç≥ÇÍÅAÉAÉNÉZÉXÇêßå¿Ç®ÇÊÇ—êßå‰Ç≥ÇÍÇ‹Ç∑ÅB

ê∫ñæÇÃïœçX
Ç±ÇÃÉvÉâÉCÉoÉVÅ[Ç…ä÷Ç∑ÇÈê∫ñæÇÕÅAçXêVÇ≥ÇÍÇÈèÍçáÇ™Ç†ÇËÇ‹Ç∑ÅBê∫ñæÇ™çXêVÇ≥ÇÍÇΩèÍçáÇÕÅAñ`ì™ÇÃÅuç≈èIçXêVì˙ÅvÇÃèÓïÒÇ™çXêVÇ≥ÇÍÇ‹Ç∑ÅBMicrosoft Update Service Ç…ÇÊÇ¡Çƒé˚èWÇ≥ÇÍÇÈèÓïÒÇÃï€åÏÇ…Ç¬Ç¢ÇƒèÌÇ…ç≈êVÇÃèÓïÒÇîcà¨Ç≈Ç´ÇÈÇÊÇ§Ç…ÅAÉvÉâÉCÉoÉVÅ[Ç…ä÷Ç∑ÇÈê∫ñæÇíËä˙ìIÇ…ämîFÇ∑ÇÈÇ±Ç∆ÇÇ®ä©ÇﬂÇµÇ‹Ç∑ÅB

è⁄ç◊èÓïÒ
É}ÉCÉNÉçÉ\ÉtÉgÇ≈ÇÕÅAå¬êlèÓïÒï€åÏï˚êjÇ…ä÷Ç∑ÇÈÇ®ãqólÇ©ÇÁÇÃÇ≤à”å©ÇÇ®ë“ÇøÇµÇƒÇ®ÇËÇ‹Ç∑ÅBïæé–Ç™ñ{ï˚êjÇèÖéÁÇµÇƒÇ¢Ç»Ç¢Ç∆évÇÌÇÍÇÈèÍçáÇÕÅAhttp://go.microsoft.com/fwlink/?LinkId=58564 ÇÃ Web ÉtÉHÅ[ÉÄÇ©ÇÁÇ≤òAóçÇ≠ÇæÇ≥Ç¢ÅBè§éÊà¯è„ÇÃê”îCÇÃâ∫Ç≈íºÇøÇ…ñ‚ëËÇÃâñæÇ®ÇÊÇ—âåàÇ…ìwÇﬂÇ‹Ç∑ÅB

Microsoft Update Privacy
c/o the Microsoft Privacy Response Center
Microsoft Corporation
One Microsoft Way
Redmond, WA, 98052 USA

Ç®ãqólÇÃçëÇ‹ÇΩÇÕínàÊÇÃÉ}ÉCÉNÉçÉ\ÉtÉgånóÒâÔé–Ç‹ÇΩÇÕéqâÔé–ÇÃòAóçêÊÇ…Ç¬Ç¢ÇƒÇÕÅAMicrosoft Worldwide Web ÉTÉCÉg www.microsoft.com/worldwide ÇÇ≤óóÇ≠ÇæÇ≥Ç¢ÅB


</TEXTAREA>

			<textarea ID=privtext READONLY TABINDEX=2 style="font-family: MS UI Gothic; font-size: 10pt; font-style: normal; line-height: 12pt; color: #000000" cols=100 name=Activation_Policy rows=12 onfocus="window.parent.OnFocus();">
			</textarea>

<br><br><br>
</form>
<span class="text-primary" style="line-height:14pt"><ID id=msprvcy_s5>ë±çsÇ∑ÇÈÇ…ÇÕÅA[ñﬂÇÈ] </ID><span class="emphasis-lesser"><ID id=msprvcy_s4>ÇÉNÉäÉbÉNÇµÇƒÇ≠ÇæÇ≥Ç¢</ID></span><span><ID id=xx1>ÅB</ID></span>
</span>

    <table border=0 class="newbuttonposition">
    <tr>
        <td width=10>&nbsp;&nbsp;</td>
        <td><BUTTON ID="btnBack" class="newbuttonsBack" TABINDEX=4  ACCESSKEY="B" style="visibility:visible;"></BUTTON></td>
        <td nowrap valign=middle class="text-primary"><span id="BackBtnLocalText" style="visibility:visible;"><label for=btnBack><id id="LocalBtnBack_Text">ñﬂÇÈ(<u>B</u>)</id></label></span></td>

        <td width=99%>&nbsp;</td>
        <td nowrap valign=middle class="text-primary"><span id="SkipBtnLocalText" style="visibility:hidden;"><label for=btnSkip><id id="LocalBtnSkip_Text">ÉXÉLÉbÉvÇ∑ÇÈ(<u>S</u>)</id></label></span></td>
        <td><BUTTON ID="btnSkip" class="newbuttonsSkip" TABINDEX=-1 ACCESSKEY="S" style="visibility:hidden;"></BUTTON></td>

        <td width=10>&nbsp;&nbsp;</td>
        <td nowrap valign=middle class="text-primary"><span id="NextBtnLocalText" style="visibility:hidden;"><label for=btnNext><id id="LocalBtnNext_Text">éüÇ÷(<u>N</u>)</id></label></span></td>
        <td><BUTTON ID="btnNext" class="newbuttonsNext" TABINDEX=-1 ACCESSKEY="N" style="visibility:hidden;"></BUTTON></td>
    </tr>
    </table>

    </td>
</tr>
</table>
</body>
<script language="javascript">
                 myform.privtext.value = myform.privtext1.value + myform.privtext2.value;
	</script>
</html>

P<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>

<head>
<style>
a:link			{font:9pt/11pt ÇlÇr ÇoÉSÉVÉbÉN; color:red}
a:visited		{font:9pt/11pt ÇlÇr ÇoÉSÉVÉbÉN; color:#4e4e4e}
</style>
<meta HTTP-EQUIV="Content-Type" Content="text-html; charset=shift_jis">
<title>ÉTÅ[ÉoÅ[Ç™å©Ç¬Ç©ÇËÇ‹ÇπÇÒ</title>
</head>

<body bgcolor="white">

<table width="400" cellpadding="3" cellspacing="5">
  <tr>
    <td id="tableProps" valign="top" align="left"><img id="pagerrorImg" SRC="res://shdoclc.dll/pagerror.gif"
    width="25" height="33"></td>
    <td id="tableProps2" align="left" valign="middle" width="360"><h1 id="textSection1"
    style="COLOR: black; FONT: 13pt/15pt ÇlÇr ÇoÉSÉVÉbÉN"><span id="errorText">ÉyÅ[ÉWÇï\é¶Ç≈Ç´Ç‹ÇπÇÒÅB</span></h1>
    </td>
  </tr>
  <tr>
    <td id="tablePropsWidth" width="400" colspan="2"><font
    style="COLOR: black; FONT: 9pt/12pt ÇlÇr ÇoÉSÉVÉbÉN">åüçıíÜÇÃÉyÅ[ÉWÇÕåªç›ÅAóòópÇ≈Ç´Ç‹ÇπÇÒÅBWeb ÉTÉCÉgÇ…ãZèpìIÇ»ñ‚ëËÇ™î≠ê∂ÇµÇƒÇ¢ÇÈÇ©ÅAÉuÉâÉEÉUÇÃê›íËÇí≤êÆÇ∑ÇÈïKóvÇ™Ç†ÇËÇ‹Ç∑ÅB</font></td>
  </tr>
  <tr>
    <td id="xpnetdiagInfo" align="left" colspan="2" width="400" bordercolor="#FF0000" style="border-style:solid; border-width:2px; padding-left: 0px; padding-right: 8px; padding-top: 8px; padding-bottom: 8px">
    <img id="xpnetdiagImg" SRC="res://xpsp3res.dll/xpnetdiag.gif"
    width="48" height="48" align="left" hspace="8"><font style="COLOR: black; FONT: 9pt/12pt ÇlÇr ÇoÉSÉVÉbÉN">ÉlÉbÉgÉèÅ[ÉNê⁄ë±ÇÃñ‚ëËÇÃèCê≥ÇééÇ›ÇÈÇ…ÇÕÅA
    <b>[ÉcÅ[Éã]</b>ÅA<b>[ê⁄ë±ÇÃñ‚ëËÇÃêfíf...]"</b>ÇÉNÉäÉbÉNÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB
    </font>
    </td>
  </tr>  
  <tr>
    <td id="tablePropsWidth" width="400" colspan="2"><font id="LID1"
    style="COLOR: black; FONT: 9pt/11pt ÇlÇr ÇoÉSÉVÉbÉN"><br>
    <p id="LID2">éüÇÃÇ±Ç∆Ç‡ééÇµÇƒÇ≠ÇæÇ≥Ç¢:</p><ul>
      <li id="instructionsText1"><a xhref="javascript:location.reload()" target="_self">
      <img border=0 src="res://shdoclc.dll/refresh.gif" width="13" height="16"
        alt="refresh.gif (82 bytes)" align="middle"></a> <a xhref="javascript:location.reload()" target="_self">[çXêV]</a> É{É^ÉìÇÉNÉäÉbÉNÇ∑ÇÈÇ©ÅAå„Ç≈Ç‚ÇËíºÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB<br>
      >
      </li>
      
      <li id="instructionsText2">ÉAÉhÉåÉX ÉoÅ[Ç…ÉyÅ[ÉW ÉAÉhÉåÉXÇì¸óÕÇµÇΩèÍçáÇÕÅAÉyÅ[ÉW ÉAÉhÉåÉXÇê≥ÇµÇ≠ì¸óÕÇµÇΩÇ©Ç«Ç§Ç©ÇämîFÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB<br>
      </li>
      <li id="instructionsText3">ê⁄ë±ÇÃê›íËÇämîFÇ∑ÇÈÇ…ÇÕÅA[ÉcÅ[Éã] ÉÅÉjÉÖÅ[ÇÃ [ÉCÉìÉ^Å[ÉlÉbÉg ÉIÉvÉVÉáÉì] ÇÉNÉäÉbÉNÇµÇ‹Ç∑ÅB[ê⁄ë±] É^ÉuÇ≈ [É_ÉCÉÑÉãÉAÉbÉvÇÃê›íË] ÉOÉãÅ[ÉvÇÃ [ê›íË] É{É^ÉìÅAÇ‹ÇΩÇÕ [LAN ÇÃê›íË] ÉOÉãÅ[ÉvÇÃ [LAN ÇÃê›íË] É{É^ÉìÇÉNÉäÉbÉNÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB
        ê›íËèÓïÒÇÕÅALAN (ÉçÅ[ÉJÉã ÉGÉäÉAÉlÉbÉg ÉèÅ[ÉN) ÇÃä«óùé“Ç©ÅAISP (ÉCÉìÉ^Å[ÉlÉbÉg ÉTÅ[ÉrÉX ÉvÉçÉoÉCÉ_) Ç™íÒãüÇ∑ÇÈèÓïÒÇ∆àÍívÇ∑ÇÈïKóvÇ™Ç†ÇËÇ‹Ç∑ÅB </li>
     <li ID="list4">ÉCÉìÉ^Å[ÉlÉbÉgê⁄ë±Ç™åüèoÇ≥ÇÍÇƒÇ¢ÇÈÇ©Ç«Ç§Ç©ÇämîFÇµÇƒÇ≠ÇæÇ≥Ç¢ÅBÉlÉbÉgÉèÅ[ÉNä«óùé“Ç™ê›íËÇóLå¯Ç…ÇµÇƒÇ¢ÇÈèÍçáÇÕÅAMicrosoft Windows Çê›íËÇµÇƒÅAÉlÉbÉgÉèÅ[ÉNÇåüç∏ÇµÇƒÅAé©ìÆìIÇ…ÉlÉbÉgÉèÅ[ÉNê⁄ë±ê›íËÇåüèoÇ∑ÇÈÇ±Ç∆Ç™Ç≈Ç´Ç‹Ç∑ÅB
        <OL> 
        <li id="instructionText6"><b>[ÉcÅ[Éã]</b>  ÉÅÉjÉÖÅ[ÇÃ <b>[ÉCÉìÉ^Å[ÉlÉbÉg ÉIÉvÉVÉáÉì]</b> ÇÉNÉäÉbÉNÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB </li>
        <li id="instructionText7"><b>[ê⁄ë±]</b> É^ÉuÇ≈ <b>[LAN ÇÃê›íË]</b> ÇÉNÉäÉbÉNÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB</li> 
        <li id="instructionText8"><b>[ê›íËÇé©ìÆìIÇ…åüèoÇ∑ÇÈ]</b> ÇëIëÇµÅA<b>[OK]</b> ÇÉNÉäÉbÉNÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB</li>
        </OL>
      </li>
    <li id="instructionsText5">
       ÉTÉCÉgÇ…ÇÊÇ¡ÇƒÇÕ 128 ÉrÉbÉgÇÃê⁄ë±ÉZÉLÉÖÉäÉeÉBÇóvãÅÇ∑ÇÈÇ‡ÇÃÇ™Ç†ÇËÇ‹Ç∑ÅB<b>[ÉwÉãÉv]</b> ÉÅÉjÉÖÅ[ÇÃ <b>[ÉoÅ[ÉWÉáÉìèÓïÒ]</b> ÇÉNÉäÉbÉNÇµÇƒÅAÉCÉìÉXÉgÅ[ÉãÇµÇΩà√çÜã≠ìxÇämîFÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB
    </li>
    <li id="instructionsText4">
       ÉZÉLÉÖÉäÉeÉBÇ≈ï€åÏÇ≥ÇÍÇΩÉTÉCÉgÇï\é¶Ç∑ÇÈÇ…ÇÕÅAÉZÉLÉÖÉäÉeÉBÇÃê›íËÇ≈ÇªÇÃÉTÉ|Å[ÉgÇ™Ç≥ÇÍÇƒÇ¢ÇÈÇ©Ç«Ç§Ç©ÇämîFÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB<b>[ÉcÅ[Éã]</b> ÉÅÉjÉÖÅ[ÇÃ <b>[ÉCÉìÉ^Å[ÉlÉbÉg ÉIÉvÉVÉáÉì]</b> ÇÉNÉäÉbÉNÇµÇ‹Ç∑ÅB[è⁄ç◊ê›íË] É^ÉuÇ≈ÅA[ÉZÉLÉÖÉäÉeÉB] Ç‹Ç≈ÉXÉNÉçÅ[ÉãÇµÅA[SSL 2.0 ÇégópÇ∑ÇÈ]ÅA[SSL 3.0 ÇégópÇ∑ÇÈ]ÅA[TLS 1.0 ÇégópÇ∑ÇÈ]ÅAÇ®ÇÊÇ— [PCT 1.0 ÇégópÇ∑ÇÈ] É`ÉFÉbÉN É{ÉbÉNÉXÇÉIÉìÇ…ÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB 
    </li>
     <li id="list3">ï ÇÃÉäÉìÉNêÊÇï\é¶Ç∑ÇÈÇ…ÇÕÅA<a href="javascript:history.back(1)"><img valign=bottom border=0 src="res://shdoclc.dll/back.gif">[ñﬂÇÈ]</a> É{É^ÉìÇÉNÉäÉbÉNÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB </li>    
      
      
    </ul>
    <p><br>
    </p>
    <h2 id="IEText" style="font:9pt/11pt ÇlÇr ÇoÉSÉVÉbÉN; color:black">ÉTÅ[ÉoÅ[Ç™å©Ç¬Ç©ÇÁÇ»Ç¢Ç©ÅADNS ÉGÉâÅ[Ç≈Ç∑ÅB<BR>Internet Explorer 
	
    </h2>
    </font></td>
  </tr>
</table>
</body>
</html>
PAD





function ErrorSkipBtnHandler()
{
    if (InActivation_AppMode())
    {
        window.external.Hangup();
        ShowIFrame('False');
        window.setTimeout("ExitWPA();",1000);
    }
    else
    {
        window.external.Hangup();
        PopCKPT();
        GoCancel();
    }
}


function DialErrorNextBtnHandler() 
{
    GoToDialingPage();
}



function CnncterrNextBtnHandler() 
{
    if (g.Callwait != null)
    {
        TapiObj.set_CallWaiting = g.Callwait.value;
    }
    window.external.set_DialAlternative(false);
    DialErrorNextBtnHandler();
}

var L_EnterValidPhoneNumber_Text = "àÍïîÇÃìdòbî‘çÜÇçÌèúÇ≈Ç´Ç‹ÇπÇÒÅB";
function CheckPhoneNumer(phoneNumber)
{
    if (phoneNumber.length == 0)
    {
        return false;
    }
    return true;
}



function ToobusyNextBtnHandler() 
{
    window.external.set_DialAlternative(true);

    if (!(g.DialRuleYes.checked)) {
        TapiObj.set_DialOut(g.edtOutsideLine.value);
        TapiObj.set_CallWaiting(g.edtCallWaiting.value);
    }
    
    if (g.DialTone.checked)
    {
        TapiObj.set_PhoneSystem(1);
    }
    else
    {
        TapiObj.set_PhoneSystem(0);
    }

    
    DialErrorNextBtnHandler();
}

var gTooBusyHaveError1 = false;
var gTooBusyHaveError2 = false;
var gTooBusyHaveError3 = false;

var L_altnumber_Text = "Ç±ÇÃë„ÇÌÇËÇÃî‘çÜÇÉ_ÉCÉÑÉãÇ∑ÇÈ(<u>D</u>):";
var L_altnumber01_Text = "* Ç±ÇÃë„ÇÌÇËÇÃî‘çÜÇÉ_ÉCÉÑÉãÇ∑ÇÈ(<u>D</u>):";
var L_outsideline_Text = "Ç±ÇÃäOê¸î≠êMî‘çÜÇä‹ÇﬂÇÈ(<u>O</u>):";
var L_outsideline01_Text = "* Ç±ÇÃäOê¸î≠êMî‘çÜÇä‹ÇﬂÇÈ(<u>O</u>):";
var L_callwaiting_Text = "ÉLÉÉÉbÉ`ÉzÉìÇñ≥å¯Ç…Ç∑ÇÈ(<u>C</u>):";
var L_callwaiting01_Text = "* ÉLÉÉÉbÉ`ÉzÉìÇñ≥å¯Ç…Ç∑ÇÈ(<u>C</u>):";

function NewToobusyNextBtnHandler() 
{
    gTooBusyHaveError1 = false;
    gTooBusyHaveError2 = false;
    gTooBusyHaveError3 = false;
    g.tberrspan1.style.visibility = "hidden";
    g.tberrspan2.style.visibility = "hidden";
    g.tberrspan3.style.visibility = "hidden";

    if (g.cb_altnumber.checked)
    {
        g_AltnumberHolder = g.edt_altnumber.value;
        window.external.set_DialNumber(g.edt_altnumber.value);

        if (g.edt_altnumber.value != "")
        {
            g.lbl_altnumber.innerHTML = L_altnumber_Text;
            g.lbl_altnumber.className = "text-primary";
        }
        else
        {
            gTooBusyHaveError1 = true;
            g.lbl_altnumber.innerHTML = L_altnumber01_Text;
            g.lbl_altnumber.className = "text-error";
        }
    }
    else
    {
        g_AltnumberHolder = "";
        window.external.set_DialAlternative(true);
    }

    if (g.cb_outsideline.checked)
    {
        g_OutsidelineHolder = g.edt_outsideline.value;
        TapiObj.set_DialOut(g.edt_outsideline.value);

        if (g.edt_outsideline.value != "")
        {
            g.lbl_outsideline.innerHTML = L_outsideline_Text;
            g.lbl_outsideline.className = "text-primary";
        }
        else
        {
            gTooBusyHaveError2 = true;
            g.lbl_outsideline.innerHTML = L_outsideline01_Text;
            g.lbl_outsideline.className = "text-error";
        }
    }
    else
    {
        g_OutsidelineHolder = "";
        TapiObj.set_DialOut(g.edt_outsideline.value);    
    }

    if (g.cb_callwaiting.checked)
    {
        g_CallwaitingHolder = g.edt_callwaiting.value;
        TapiObj.set_CallWaiting(g.edt_callwaiting.value);

        if (g.edt_callwaiting.value != "")
        {
            g.lbl_callwaiting.innerHTML = L_callwaiting_Text;
            g.lbl_callwaiting.className = "text-primary";
        }
        else
        {
            gTooBusyHaveError3 = true;
            g.lbl_callwaiting.innerHTML = L_callwaiting01_Text;
            g.lbl_callwaiting.className = "text-error";
        }
    }
    else
    {
        g_CallwaitingHolder = "";
        TapiObj.set_CallWaiting(g.edt_callwaiting.value);
    }

    if (g.DialTone.checked)
    {
        TapiObj.set_PhoneSystem(1);
    }
    else
    {
        TapiObj.set_PhoneSystem(0);
    }

    if ((gTooBusyHaveError1) || (gTooBusyHaveError2) || (gTooBusyHaveError3))
        NewToobusy_LoadMe();
    else
        DialErrorNextBtnHandler(); 
}

function TelError_TelephoneBtnHandler() 
{
    
    PopCKPT();
    GoNavigate(CKPT_ACTIVSVC)
}

function Enable_TelBtn_ActMode()
{
    if (InActivation_AppMode())
    {
        
        GetPageTitle();

        g.btnTelephone.style.display = "inline";
        g.btnTelephone.onmouseover = HandleButtonMouseOver;
        g.btnTelephone.onmouseout  = HandleButtonMouseOut;
        g.btnTelephone.onclick     = TelError_TelephoneBtnHandler;

        
        var L_RemindMeLater_Text = "Ç±ÇÃçÏã∆Çé¿çsÇµÇ»Ç¢Ç≈ë±ÇØÇÈÇ…ÇÕÅA<b>[å„Ç≈í ímÇ∑ÇÈ]</b> ÇÉNÉäÉbÉNÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB";
        g.RemindMeLaterText.innerHTML = L_RemindMeLater_Text;
        var L_RemindMeLater01_Text = " å„Ç≈í ímÇ∑ÇÈ(<u>M</u>) ";
        var L_AccesskeyRemindM_Text = "M";
        g.btnSkip.innerHTML   = L_RemindMeLater01_Text;
        g.btnSkip.accessKey   = L_AccesskeyRemindM_Text;
    }
}

function DefaultErr_LoadMe()
{
    InitFrameRef();

    if (APP_MSN_MODE == window.external.Directions.get_AppMode())
    {
        var spanCollection = g.document.body.getElementsByTagName("span");
        if (spanCollection != 0)
        {
            for (var i = 0; i < spanCollection.length; i++)
            {
                if (spanCollection[i].className == "text-primary-btndesc")
                {
                    var styleObj = spanCollection[i].style;
                    styleObj.position = "relative";
                    styleObj.top = "0";
                    styleObj.left = "0";
                }
            }
        }
    }

    InitButtons();

    try
    {
        if(g.btnRestore != null) 
        {
            if (InReminderMode())
            {
                g.btnRestore.onmouseover = HandleButtonMouseOver;
                g.btnRestore.onmouseout  = HandleButtonMouseOut;
                g.btnRestore.className="buttons";
            }
            else
            {
                g.btnRestore.onmouseover = HandleNextButtonMouseOver;
                g.btnRestore.onmouseout  = HandleNextButtonMouseOut;
                g.btnRestore.onmousedown = HandleNextButtonMouseDown;
                g.btnRestore.className="newbuttonsNext";
            }
        } 
    } catch (e) {}

    Enable_TelBtn_ActMode();

    if (InActivation_AppMode())
    {
        g_FirstFocusElement = g.btnNext;
        window.setTimeout("DoFocus();",1000);
    }
    else
    {
        g.btnNext.focus();
    }
    
    window.external.set_DialAlternative(false);
    g.btnNext.onclick = DialErrorNextBtnHandler;
    g.btnSkip.onclick = ErrorSkipBtnHandler;
}

function Cnncterr_LoadMe()
{
    DefaultErr_LoadMe();
    g.btnNext.onclick = CnncterrNextBtnHandler;
    if (g.Callwait != null)
        g.Callwait.value = TapiObj.get_CallWaiting;
}

var g_AltnumberHolder   = null;
var g_OutsidelineHolder = null;
var g_CallwaitingHolder = null;

function Toobusy_LoadMe()
{
    DefaultErr_LoadMe();
    
    g.spanDisplayNumber.innerText = window.external.get_DialNumber;
    g.edtOutsideLine.value = TapiObj.get_DialOut;
    g.edtCallWaiting.value = TapiObj.get_CallWaiting;
    if (1 == TapiObj.get_PhoneSystem)
    {
        g.DialTone.checked = true;
    }
    else
    {
        g.DialPulse.checked = true;
    }
    
    g.btnNext.onclick = ToobusyNextBtnHandler;
    
    SelectDialRule();
}


function NewToobusy_LoadMe()
{
    DefaultErr_LoadMe();

    
    var L_tbstr1_Text = "ÉâÉCÉZÉìÉXîFèÿÇÃéËë±Ç´Ç∆ÉÜÅ[ÉUÅ[ìoò^ÇçsÇ§ÇΩÇﬂÇÃÇ±ÇÃî‘çÜÇ…ê⁄ë±Ç≈Ç´Ç‹ÇπÇÒÅB";
    var L_tbstr2_Text = "ÉâÉCÉZÉìÉXîFèÿÇÃéËë±Ç´ÇçsÇ§ÇΩÇﬂÇÃÇ±ÇÃî‘çÜÇ…ê⁄ë±Ç≈Ç´Ç‹ÇπÇÒÅB";
    var L_tbstr3_Text = "ÉÜÅ[ÉUÅ[ìoò^ÇçsÇ§ÇΩÇﬂÇÃÇ±ÇÃî‘çÜÇ…ê⁄ë±Ç≈Ç´Ç‹ÇπÇÒÅB";

    var L_tbstr4_Text = "ÉRÉìÉsÉÖÅ[É^ÇÃÉâÉCÉZÉìÉXîFèÿÇÃéËë±Ç´Ç∆ÉÜÅ[ÉUÅ[ìoò^ÇçsÇÌÇ»Ç¢Ç≈êÊÇ…êiÇﬁÇ…ÇÕÅA<br><b>[è»ó™]</b> ÇÉNÉäÉbÉNÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB";
    var L_tbstr5_Text = "ÉRÉìÉsÉÖÅ[É^ÇÃÉâÉCÉZÉìÉXîFèÿÇÃéËë±Ç´ÇçsÇÌÇ»Ç¢Ç≈ë±ÇØÇÈÇ…ÇÕÅA<br><b>[è»ó™]</b> ÇÉNÉäÉbÉNÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB";
    var L_tbstr6_Text = "ÉRÉìÉsÉÖÅ[É^ÇÉÜÅ[ÉUÅ[ìoò^ÇµÇ»Ç¢Ç≈êÊÇ…êiÇﬁÇ…ÇÕÅA<br><b>[è»ó™]</b> ÇÉNÉäÉbÉNÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB";
    
    if (g_DoActivation)
    {
        if  ((g_PostToMS) || (g_PostToOEM))
        {
            g.tbpar1.innerHTML = L_tbstr1_Text;
            g.tbpar2.innerHTML = L_tbstr4_Text;
        }
        else
        {
            g.tbpar1.innerHTML = L_tbstr2_Text;
            g.tbpar2.innerHTML = L_tbstr5_Text;
        }
    }
    else
    {
        g.tbpar1.innerHTML = L_tbstr3_Text;
        g.tbpar2.innerHTML = L_tbstr6_Text;
    }
    


    var fLoadPhoneNumber = window.external.get_DialNumber;
    g.spanDisplayNumber.innerHTML = "&nbsp;&nbsp;<B>" + fLoadPhoneNumber + "</B>";

    if (gTooBusyHaveError1)
        g.tberrspan1.style.visibility = "visible";
    if (gTooBusyHaveError2)
        g.tberrspan2.style.visibility = "visible";
    if (gTooBusyHaveError3)
        g.tberrspan3.style.visibility = "visible";


    if (((g_AltnumberHolder == null) || (g_AltnumberHolder == "")) && (!gTooBusyHaveError1))
    {
        g_AltnumberHolder = "";
        g.edt_altnumber.value = "";
        g.edt_altnumber.style.backgroundColor = "#dddddd";
        g.edt_altnumber.style.disabled = true;
        g.cb_altnumber.checked = false;
    }
    else
    {
        g.edt_altnumber.disabled = false;
        g.edt_altnumber.value = g_AltnumberHolder;
        g.edt_altnumber.style.backgroundColor = "#ffffff";
        g.cb_altnumber.checked = true;
    }

    if (!gTooBusyHaveError2)
        g_OutsidelineHolder = TapiObj.get_DialOut;

    if (((g_OutsidelineHolder == null) || (g_OutsidelineHolder == "")) && (!gTooBusyHaveError2))
    {
        g_OutsidelineHolder = "";
        g.edt_outsideline.value = "";
        g.edt_outsideline.style.backgroundColor = "#dddddd";
        g.edt_outsideline.disabled = true;
        g.cb_outsideline.checked = false;
    }
    else
    {
        g.edt_outsideline.disabled = false;
        g.edt_outsideline.value = g_OutsidelineHolder;
        g.edt_outsideline.style.backgroundColor = "#ffffff";
        g.cb_outsideline.checked = true;
    }


    if (!gTooBusyHaveError3)
        g_CallwaitingHolder = TapiObj.get_CallWaiting;

    if (((g_CallwaitingHolder == null) || (g_CallwaitingHolder == "")) && (!gTooBusyHaveError3))
    {
        g_CallwaitingHolder = "";
        g.edt_callwaiting.value = "";
        g.edt_callwaiting.style.backgroundColor = "#dddddd";
        g.edt_callwaiting.disabled = true;
        g.cb_callwaiting.checked = false;
    }
    else
    {
        g.edt_callwaiting.disabled = false;
        g.edt_callwaiting.value = g_CallwaitingHolder;
        g.edt_callwaiting.style.backgroundColor = "#ffffff";
        g.cb_callwaiting.checked = true;
    }

    if (1 == TapiObj.get_PhoneSystem)
    {
        g.DialTone.checked = true;
    }
    else
    {
        g.DialPulse.checked = true;
    }

    g.btnNext.onclick = NewToobusyNextBtnHandler;
}


function Check_cb_altnumber()
{
    if (g.cb_altnumber.checked == true)
    {
        g.edt_altnumber.style.backgroundColor = "#ffffff";
        g.edt_altnumber.disabled = false;
        g.edt_altnumber.value = g_AltnumberHolder;
        g.edt_altnumber.focus();
    }
    else
    {
        g_AltnumberHolder = g.edt_altnumber.value;
        g.edt_altnumber.value = "";
        g.edt_altnumber.style.backgroundColor = "#dddddd";
        g.edt_altnumber.disabled = true;
        g.lbl_altnumber.innerHTML = L_altnumber_Text;
        g.lbl_altnumber.className = "text-primary";
    }
}


function Check_cb_outsideline()
{
    if (g.cb_outsideline.checked == true)
    {
        g.edt_outsideline.style.backgroundColor = "#ffffff";
        g.edt_outsideline.disabled = false;
        g.edt_outsideline.value = g_OutsidelineHolder;
        g.edt_outsideline.focus();
    }
    else
    {
        g_OutsidelineHolder = g.edt_outsideline.value;
        g.edt_outsideline.value = "";
        g.edt_outsideline.style.backgroundColor = "#dddddd";
        g.edt_outsideline.disabled = true;
        g.lbl_outsideline.innerHTML = L_outsideline_Text;
        g.lbl_outsideline.className = "text-primary";
    }
}


function Check_cb_callwaiting()
{
    if (g.cb_callwaiting.checked == true)
    {
        g.edt_callwaiting.style.backgroundColor = "#ffffff";
        g.edt_callwaiting.disabled = false;
        g.edt_callwaiting.value = g_CallwaitingHolder;
        g.edt_callwaiting.focus();
    }
    else
    {
        g_CallwaitingHolder = g.edt_callwaiting.value;
        g.edt_callwaiting.value = "";
        g.edt_callwaiting.style.backgroundColor = "#dddddd";
        g.edt_callwaiting.disabled = true;
        g.lbl_callwaiting.innerHTML = L_callwaiting_Text;
        g.lbl_callwaiting.className = "text-primary";
    }
}

function SelectDialRule()
{    
    if (g.DialRuleYes.checked)
    {
        if (g.edtPhoneNumber)
            g.edtPhoneNumber.disabled=false;
        g.edtOutsideLine.disabled=true;
        g.edtCallWaiting.disabled=true;
    }
    else
    {
        if (g.edtPhoneNumber)
            g.edtPhoneNumber.disabled=true;
        g.edtOutsideLine.disabled=false;
        g.edtCallWaiting.disabled=false;
    }
}

function RestoreDialRule()
{
    g.spanDisplayNumber.innerText = window.external.get_DialNumber;
    if (g.edtPhoneNumber)
        g.edtPhoneNumber.value = window.external.get_PhBkNumber;
    g.edtOutsideLine.value = TapiObj.get_DialOut;
    g.edtCallWaiting.value = TapiObj.get_CallWaiting;
    if (1 == TapiObj.get_PhoneSystem)
    {
        g.DialTone.checked = true;
    }
    else
    {
        g.DialPulse.checked = true;
    }
}


function ISPInsError_NextBtnHandler() 
{
    PopCKPT();
    GoNavigate(CKPT_OEMCUST);
}
function ISPInsError_LoadMe()
{
    DefaultErr_LoadMe();
    g.ins_ISPName1.innerText = window.external.get_ISPName;
    g.ins_ISPName2.innerText = window.external.get_ISPName;
    g.btnNext.onclick = ISPInsError_NextBtnHandler;
}



function NoAnswNextBtnHandler() 
{
    if (g.DialTone.checked)
    {
        TapiObj.set_PhoneSystem(1);
    }
    else
    {
        TapiObj.set_PhoneSystem(0);
    }
    
    if (g.DialRuleYes.checked) {
        if (CheckPhoneNumer(g.edtPhoneNumber.value))
        {
            window.external.set_DialNumber(g.edtPhoneNumber.value);
            DialErrorNextBtnHandler();
        }
        else
        {
            g.edtPhoneNumber.value = window.external.get_DialNumber;
            g.error_mesg.innerHTML = L_EnterValidPhoneNumber_Text;
            g.error_mesg.style.display="inline";
        }
    }
    else
    {
        TapiObj.set_DialOut(g.edtOutsideLine.value);
        TapiObj.set_CallWaiting(g.edtCallWaiting.value);
        window.external.set_DialAlternative(false);
        DialErrorNextBtnHandler();
    }
    

    
}

function NoAnsw_LoadMe()
{
    DefaultErr_LoadMe();
        
    g.spanDisplayNumber.innerText = window.external.get_DialNumber;
    g.edtPhoneNumber.value = g.spanDisplayNumber.innerText;
    g.edtOutsideLine.value = TapiObj.get_DialOut;
    g.edtCallWaiting.value = TapiObj.get_CallWaiting;
    if (1 == TapiObj.get_PhoneSystem)
    {
        g.DialTone.checked = true;
    }
    else
    {
        g.DialPulse.checked = true;
    }

    g.btnNext.onclick = NoAnswNextBtnHandler;
    
    SelectDialRule();

}



function NoModemBtnHandler() 
{
    window.external.Finish();
}
function NoModem_LoadMe()
{
    DefaultErr_LoadMe();
    g.btnNext.onclick = NoModemBtnHandler;
}

function Pulse_LoadMe()
{
    DefaultErr_LoadMe();
    if (1 == TapiObj.set_PhoneSystem)
        g.tone.checked = true;
    else
        g.pulse.checked = true;
}

function DesktopPbErr_LoadMe()
{
    InitFrameRef();
    if (InActivation_AppMode())
    {
        GetPageTitle();
    }

    InitButtons();

    var L_DeskpbErrOEMName_Text = g_OEMNameStr;
    if (L_DeskpbErrOEMName_Text == "")
    {
        L_DeskpbErrOEMName_Text = L_MissingOEMName_Text;
    }

    var L_DeskMainPBerrMsg_Text = "";
    var L_Title_Text = "";

    if (g_DoActivation)
    {
        if  ((g_PostToMS) && (g_PostToOEM))
        {
            L_DeskMainPBerrMsg_Text        = "ÉIÉìÉâÉCÉìÇ≈ÇÃÉÜÅ[ÉUÅ[ìoò^Ç∆ÉâÉCÉZÉìÉXîFèÿÇÃéËë±Ç´ÇÕÅAÇ®èZÇ‹Ç¢ÇÃçëÇ‹ÇΩÇÕínàÊÇ≈ÇÕåªç›óòópÇ≈Ç´Ç‹ÇπÇÒÅBÉCÉìÉ^Å[ÉlÉbÉgê⁄ë±Ç≈ÇÕÇ»Ç¢ï˚ñ@Ç≈ÉRÉìÉsÉÖÅ[É^ÇÉÜÅ[ÉUÅ[ìoò^Ç∑ÇÈÇ…ÇÕÅA%1 Ç…òAóçÇµÇƒÇ≠ÇæÇ≥Ç¢ÅBÉCÉìÉ^Å[ÉlÉbÉgÇ…ê⁄ë±Ç∑ÇÈÇ©ÅAMicrosoft Ç…ìdòbÇµÇƒ Windows ÇÃÉâÉCÉZÉìÉXîFèÿÇÃéËë±Ç´ÇçsÇ¶Ç‹Ç∑ÅB";
            g.Desktoppberr_par1.innerText  = ApiObj.FormatMessage(L_DeskMainPBerrMsg_Text, L_DeskpbErrOEMName_Text);
        }
        else if ((g_PostToMS) && (!g_PostToOEM))
        {
            L_Title_Text = "ÉIÉìÉâÉCÉìÇ≈ÇÃÉâÉCÉZÉìÉXîFèÿÇÃéËë±Ç´Ç∆ÉÜÅ[ÉUÅ[ìoò^Ç™Ç≈Ç´Ç‹ÇπÇÒ"; 
            g.Title_Text.innerText = L_Title_Text;
            GetPageTitle();
            L_DeskMainPBerrMsg_Text        = "ÉIÉìÉâÉCÉìÇ≈ÇÃÉÜÅ[ÉUÅ[ìoò^Ç∆ÉâÉCÉZÉìÉXîFèÿÇÃéËë±Ç´ÇÕÅAÇ®èZÇ‹Ç¢ÇÃçëÇ‹ÇΩÇÕínàÊÇ≈ÇÕåªç›óòópÇ≈Ç´Ç‹ÇπÇÒÅBÉCÉìÉ^Å[ÉlÉbÉgÇ…ê⁄ë±Ç∑ÇÈÇ©ÅAMicrosoft Ç…ìdòbÇµÇƒ Windows ÇÃÉâÉCÉZÉìÉXîFèÿÇÃéËë±Ç´ÇçsÇ¶Ç‹Ç∑ÅBMicrosoft Ç… Windows ÇÉÜÅ[ÉUÅ[ìoò^Ç∑ÇÈÇ…ÇÕÉCÉìÉ^Å[ÉlÉbÉgê⁄ë±Ç™ïKóvÇ≈Ç∑ÅB";
            g.Desktoppberr_par1.innerText  = L_DeskMainPBerrMsg_Text;
        }
        else if ((!g_PostToMS) && (g_PostToOEM))
        {
            L_DeskMainPBerrMsg_Text        = "ÉIÉìÉâÉCÉìÇ≈ÇÃÉâÉCÉZÉìÉXîFèÿÇÃéËë±Ç´ÇÕÅAÇ®èZÇ‹Ç¢ÇÃçëÇ‹ÇΩÇÕínàÊÇ≈ÇÕåªç›óòópÇ≈Ç´Ç‹ÇπÇÒÅBÉCÉìÉ^Å[ÉlÉbÉgÇ…ê⁄ë±Ç∑ÇÈÇ©ÅAMicrosoft Ç…ìdòbÇµÇƒ Windows ÇÃÉâÉCÉZÉìÉXîFèÿÇÃéËë±Ç´ÇçsÇ¶Ç‹Ç∑ÅBÉCÉìÉ^Å[ÉlÉbÉgê⁄ë±Ç≈ÇÕÇ»Ç¢ï˚ñ@Ç≈ÉRÉìÉsÉÖÅ[É^ÇÉÜÅ[ÉUÅ[ìoò^Ç∑ÇÈÇ…ÇÕÅA%1 Ç…òAóçÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB";
            g.Desktoppberr_par1.innerText  = ApiObj.FormatMessage(L_DeskMainPBerrMsg_Text, L_DeskpbErrOEMName_Text);
        }
        else
        {
            L_Title_Text = "ÉIÉìÉâÉCÉìÇ≈ÇÃÉâÉCÉZÉìÉXîFèÿÇÃéËë±Ç´Ç™Ç´Ç‹ÇπÇÒ";
            g.Title_Text.innerText = L_Title_Text;
            GetPageTitle();
            
            L_DeskMainPBerrMsg_Text        = "ÉIÉìÉâÉCÉìÇ≈ÇÃÉâÉCÉZÉìÉXîFèÿÇÃéËë±Ç´ÇÕÅAÇ®èZÇ‹Ç¢ÇÃçëÇ‹ÇΩÇÕínàÊÇ≈ÇÕåªç›óòópÇ≈Ç´Ç‹ÇπÇÒÅBÉCÉìÉ^Å[ÉlÉbÉgÇ…ê⁄ë±Ç∑ÇÈÇ©ÅAMicrosoft Ç…ìdòbÇµÇƒ Windows ÇÃÉâÉCÉZÉìÉXîFèÿÇÃéËë±Ç´ÇçsÇ¶Ç‹Ç∑ÅB";
            g.Desktoppberr_par1.innerText  = L_DeskMainPBerrMsg_Text;
        }
    }
    else
    {
        if ((!g_PostToMS) && (g_PostToOEM))
        {
            L_Title_Text = "ÉIÉìÉâÉCÉììoò^Ç™Ç≈Ç´Ç‹ÇπÇÒ";
            g.Title_Text.innerText = L_Title_Text;
            GetPageTitle();
            L_DeskMainPBerrMsg_Text        = "ÉIÉìÉâÉCÉìÇ≈ÇÃÉÜÅ[ÉUÅ[ìoò^ÇÕÅAÇ®èZÇ‹Ç¢ÇÃçëÇ‹ÇΩÇÕínàÊÇ≈ÇÕåªç›óòópÇ≈Ç´Ç‹ÇπÇÒÅBÉCÉìÉ^Å[ÉlÉbÉgê⁄ë±Ç≈ÇÕÇ»Ç¢ï˚ñ@Ç≈ÉRÉìÉsÉÖÅ[É^ÇÉÜÅ[ÉUÅ[ìoò^Ç∑ÇÈÇ…ÇÕÅA%1 Ç…òAóçÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB";
            g.Desktoppberr_par1.innerText  = ApiObj.FormatMessage(L_DeskMainPBerrMsg_Text, L_DeskpbErrOEMName_Text);
        }
    }

    g.btnBack.focus();
    g.btnBack.onclick = window.parent.SimpleNavBack;
}
PADfunction ObjectLoad()
{
    if ( objectDestination )
    {
        var bodyElement = objectDestination.parentElement;
        
        if ( bodyElement.objectSource )
        {
            bodyElement.innerHTML = "<embed width=100% height=100% fullscreen=yes>";
            bodyElement.firstChild.src = bodyElement.objectSource;
        }
    }
}






var ERR_ACT_UNINITIALIZED         = -1;
var ERR_ACT_SUCCESS               = 0;
var ERR_ACT_INACCESSIBLE          = 1;
var ERR_ACT_INVALID_PID           = 2;
var ERR_ACT_USED_PID              = 3;
var ERR_ACT_INTERNAL_WINDOWS_ERR  = 4;
var ERR_ACT_BLOCKED_PID           = 5;
var ERR_ACT_CORRUPTED_PID         = 6;
var ERR_ACT_NETWORK_FAILURE       = 7;
var ERR_ACT_DEDICATED_PID_ENTRY   = 8;


var COMPAREMODE_BINARY  = 0;
var COMPAREMODE_TEXT    = 1;


var g_ProductName = "Windows XP";
var g_ActivationRequired = window.external.NeedActivation();
var g_DoActivation = false;
var g_ActivationStatus = ERR_ACT_UNINITIALIZED;
var g_act_specific_error = 0;
var g_OOBEMUIDir = window.external.GetOOBEMUIPath();


var L_MissingOEMName_Text = "ÉGÉâÅ[: oobeinfo.ini ÇÃ [Branding] ÉZÉNÉVÉáÉìÇ… OEM ñºÇ™Ç†ÇËÇ‹ÇπÇÒÅB";


var DebugObj = null;

var APP_UPDATE_MODE = 6;


var KeyEsc = 0x1B;
var KeyEnter = 0xD;
var KeyBackSpc = 0x8;
var KeyDelete = 0x2E;
var KeyTab = 0x9;
var KeyDwnArrow = 0x28;
var KeyUpArrow = 0x26;
var KeyLeftArrow = 0x25;
var KeyRightArrow = 0x27;


if (null == DebugObj){
    DebugObj = new Object;
    DebugObj = window.external.Debug;
}









function trace(sMsg)
{
    DebugObj.Trace(sMsg);
}


function Navigate(strURL)
{
    
    try
    {
       g.document.body.style.cursor = "default";
    }
    catch(e){}

    strURL = g_OOBEMUIDir + "\\" + strURL;

    trace("Navigate: " + strURL);
    g.navigate(strURL);
}   


var g_CheckFinishAgain = true;
function CheckFinishStatus()
{
    if (g_CheckFinishAgain)
    {
        if (g_DoActivation)
            g_IsActivationSuccessful = true;
        else
            g_IsActivationSuccessful = false;
        if (g_PostToMS)
            g_IsMSRegistrationSuccessful = true;
        else
            g_IsMSRegistrationSuccessful = false;

        if (g_PostToOEM)
            g_IsOEMRegistrationSuccessful = true;
        else
            g_IsOEMRegistrationSuccessful = false;
    }
}

<!--REQUIRED FUNCTION NAME-->
function ActivationComplete(status, status_errcode)
{
g_CheckFinishAgain = true;
    if ( status != null) {

        g_ActivationStatus = status;

        if ( g_ActivationStatus != ERR_ACT_SUCCESS ) {

            trace("Activation failed.  Error = " + g_ActivationStatus);

            
            g_IsActivationSuccessful      = false;
            g_IsMSRegistrationSuccessful  = false;
            g_IsOEMRegistrationSuccessful = false;

            g_act_specific_error = status_errcode;
            GoNavigate(CKPT_ACT_MSG);
            return;
        }
        else
        {
            CheckFinishStatus();
            
            g_CheckFinishAgain = false;
        }

        g_ActivationRequired = false;
        g_DoActivation = false;
        StatusObj.set_Status(MS_REGISTRATION, true);
    }

    if (g_PostToOEM)
    {
        if (0 == RegisterObj.get_OEMAddRegPage)
        {
            window.external.PostRegData(POST_TO_OEM);
            StatusObj.set_Status(OEM_REGISTRATION, true);
            g_IgnoreDialErr = true;
            PopCKPT(CKPT_REGDIAL);
            PopCKPT(CKPT_REGISTER3);
            PopCKPT();    
            CheckFinishStatus();
            if (InReminderMode())
                GoNavigate(CKPT_ACT_MSG);      
            else
                GoNavigate(CKPT_ICONN);        
        }
        else
        {
            
            
            
            
            g_IgnoreDialErr = true;

            if ( APP_REG_MODE == window.external.Directions.get_AppMode() )
            {
                Navigate("html\\oemreg\\roemadd.htm");
            }
            else
            {
                Navigate("html\\oemreg\\oemadd.htm");
            }
        }
    }
    else
    {
        g_IgnoreDialErr = true;

        PopCKPT(CKPT_REGDIAL);
        PopCKPT(CKPT_REGISTER3);
        PopCKPT();    
        CheckFinishStatus();
        if (InReminderMode())
            GoNavigate(CKPT_ACT_MSG);    
        else
            GoNavigate(CKPT_ICONN);      
    }

    if ((g_PostToMS && g_PostToOEM && (1 == RegisterObj.get_PostToOEM)) ||
        ((0 == RegisterObj.get_PostToOEM) && g_PostToMS))
    {
        if ( APP_REG_MODE == window.external.Directions.get_AppMode() )
        {
            
            
            
            window.external.StopRemind(REMIND_REG);
        }
        else
        {
            
            
            
            window.external.DeleteRemind(REMIND_REG);
        }
    }
}






var SORT_DEFAULT                = 0x0;     

var LANG_JAPANESE               = 0x11;
var LANG_KOREAN                 = 0x12;
var LANG_CHINESE                = 0x04;

var SUBLANG_KOREAN              = 0x01;    
var SUBLANG_CHINESE_TRADITIONAL = 0x01;    
var SUBLANG_CHINESE_SIMPLIFIED  = 0x02;    
var SUBLANG_DEFAULT             = 0x01;    









function MAKELANGID(p, s)
{
    return (( s << 10) | p);
}

function MAKELCID(lgid, srtid)
{
    return ((srtid << 16) | lgid);
}

function IsKoreanLocale() {
   var language = ApiObj.get_UserDefaultUILanguage();
   if (language == MAKELCID(MAKELANGID(LANG_KOREAN, SUBLANG_KOREAN), SORT_DEFAULT)) {
      return true;
   }

   return false;
}

function IsFarEastLocale()
{
    
    
    var language = ApiObj.get_UserDefaultUILanguage();

    if (language == MAKELCID(MAKELANGID(LANG_KOREAN, SUBLANG_KOREAN), SORT_DEFAULT) ||
        language == MAKELCID(MAKELANGID(LANG_CHINESE, SUBLANG_CHINESE_TRADITIONAL), SORT_DEFAULT) ||
        language == MAKELCID(MAKELANGID(LANG_CHINESE, SUBLANG_CHINESE_SIMPLIFIED), SORT_DEFAULT) ||
        language == MAKELCID(MAKELANGID(LANG_JAPANESE, SUBLANG_DEFAULT), SORT_DEFAULT))
        return true
    else
        return false;
}

function StorePid()
{
    var strPid = "";

    for (var i = 0; i < 4; i++)
    {
        strPid += g.edtProductKey[i].value;
        strPid += '-';
    }

    strPid += g.edtProductKey[i].value;

    PidObj.set_PID(strPid);
}





var g_AU_radiosticky = null;  
var L_IntroSlipstream_Text = "é©ìÆçXêVÇégÇ§Ç∆ÅAÇ®égÇ¢ÇÃÉRÉìÉsÉÖÅ[É^Ç…ëŒÇ∑ÇÈç≈êVÇÃèdóvÇ»çXêVÇ™ Windows Ç…ÇÊÇ¡ÇƒíËä˙ìIÇ…ämîFÇ≥ÇÍÅAé©ìÆìIÇ…ÉCÉìÉXÉgÅ[ÉãÇ≥ÇÍÇ‹Ç∑ÅBçXêVÇ…ÇÕÅAÉZÉLÉÖÉäÉeÉBÇÃçXêVÅAèdóvÇ»çXêVÅAService Pack Ç»Ç«Ç™ä‹Ç‹ÇÍÇ‹Ç∑ÅBé©ìÆçXêVÇóLå¯Ç…Ç∑ÇÈÇ∆ÅAÉRÉìÉsÉÖÅ[É^ÇÃï€åÏÇ…ñóßÇøÇ‹Ç∑ÅB";
var L_IntroUpdate_Text = "Windows XP Service Pack 3 ÇÉCÉìÉXÉgÅ[ÉãÇµÇƒÇ¢ÇΩÇæÇ´ÅAÇ†ÇËÇ™Ç∆Ç§Ç≤Ç¥Ç¢Ç‹Ç∑ÅBÉZÉbÉgÉAÉbÉvÇÃÉvÉçÉZÉXÇäÆóπÇ∑ÇÈëOÇ…ÅAé©ìÆçXêVÇóLå¯Ç…ÇµÇƒÇ≠ÇæÇ≥Ç¢ÅBé©ìÆçXêVÇ…ÇÊÇËÅAÉRÉìÉsÉÖÅ[É^ÇÃÇΩÇﬂÇÃç≈êVÇÃèdóvÇ»çXêVÇämîFÇµÅAé©ìÆìIÇ…ÉCÉìÉXÉgÅ[ÉãÇ∑ÇÈÇ±Ç∆Ç™Ç≈Ç´Ç‹Ç∑ÅBÇ±ÇÍÇÁÇÃçXêVÇ…ÇÕÅAÉZÉLÉÖÉäÉeÉBÇÃçXêVÇ‚èdóvÇ»çXêVÅAService Pack Ç™ä‹Ç‹ÇÍÇÈÇ±Ç∆Ç™Ç†ÇËÇ‹Ç∑ÅB";

function AutoUpdateLoadMe()
{
    InitFrameRef();

    
    if (window.external.GetNoWelcomeFinish())
    {
        g.btnNext = g.btnFinish;
        g.FiniBtnLocalText.style.display = "inline";
        g.btnFinish.style.display = "inline";
    }
    else
    {
        g.NextBtnLocalText.style.display = "inline";
        g.btnNext.style.display = "inline";
    }

    
    
    g.tabl3.style.width="105%"    

    
    
    
    if (g_AU_radiosticky == null)
        g.btnNext.disabled = true;
    else if (g_AU_radiosticky == 1)
        g.radioAgree.checked = true;
    else
        g.radioDisAgree.checked = true;

    InitNewButtons();
    g.btnNext.onclick = AUNextBtnHandler;

    if (APP_UPDATE_MODE == window.external.Directions.get_AppMode())
    {
        g.BackBtnLocalText.style.display = "none";
        g.btnBack.style.display = "none";
        g_FirstFocusElement = g.au_privacy_policy_link;
        g_FirstFocusElement.focus();
        g.AutoUpdateIntro.innerText = L_IntroUpdate_Text;
    }
    else
    {
        g_FirstFocusElement = g.btnBack;
        g_FirstFocusElement.focus();
        g.AutoUpdateIntro.innerText = L_IntroSlipstream_Text;
    }

    try
    {
        g.document.body.onkeydown = AUOnKeyDown;
    }
    catch(e)
    {
    }
}

function AUNextBtnHandler()
{
    StoreAU();
    GoNext();
}

function AUOnKeyDown()
{

    if (KeyEsc == g.event.keyCode)
    {
        g.event.returnValue = false;
        g.event.keyCode = 0;
    }

    OnKeyDown();
}

function AURadioClicked()
{
    
    if(g.btnNext.disabled && (g.radioAgree.checked || g.radioDisAgree.checked))
    {
        g.btnNext.onmouseover = HandleNextButtonMouseOver;
        g.btnNext.onmouseout  = HandleNextButtonMouseOut;
        g.btnNext.onmousedown = HandleNextButtonMouseDown;
        g.btnNext.className="newbuttonsNext";
        g.btnNext.disabled = false;
        g.btnNext.onclick = AUNextBtnHandler;
        g.btnNext.focus();
    }

    if (g.radioAgree.checked)
    {
        g_AU_radiosticky=1;
    }
    else
    {
        g_AU_radiosticky=2;
    }
}

function StoreAU()
{
    AutoUpdateObj.set_Acceptance = g.radioAgree.checked;
}



function navigatetoPrivacy(PrivPage)
{
    if(g_CurrentCKPT == CKPT_REGISTER1) {
        Reg1SaveRadioState();
    }

    if(g_CurrentCKPT == CKPT_REGISTER3) {
        Reg3SaveSettings();
    }

    if (PrivPage == "MS")
        Navigate("setup\\prvcyMS.htm");
    else if (PrivPage == "Activation_Policy")
        Navigate("setup\\act_plcy.htm");
    else if (PrivPage == "AutoUpdate_Policy")
        Navigate("setup\\au_plcy.htm");
    else
        Navigate("setup\\OEMpriv.htm");
}
PAD
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=shift_jis"/>
    <title>out of box experience</title>
    <LINK REL="stylesheet" TYPE="text/css" HREF="aregstyl.css" id=deskstyle1>
    <LINK REL="stylesheet" TYPE="text/css" HREF="aregsty2.css" id=deskstyle2 disabled>
    <META HTTP-EQUIV="MSThemeCompatible" CONTENT="Yes">

<script>
var g_PID_Link_URL       = "";

function PID_Link_OnClick(stage)
{
    
    
    
    
    
    
    
    if (stage == null)
    {
        window.parent.ShowIFrame('False', window.parent.L_CheckConnectivity_Text);
        window.parent.ResetConnectedToInternetEx();
        window.parent.ConnectedToInternetEx(true, "g.PID_Link_OnClick(1);");
    }
    else if (stage == 1)
    {
        var connected = window.parent.ConnectedToInternetEx(false);
        
        if (!connected)
        {
            connected = window.external.InternetAutodial();
            window.parent.g_InitAutodial = connected;
            
            if (!connected)
            {
                if (window.external.GnsAutodial(true, "User1"))
                {
                    window.parent.ResetConnectedToInternetEx();
                    connected = window.parent.ConnectedToInternetEx(true);
                }
            }
        }

        if (connected)
        {
            window.open(g_PID_Link_URL);
        }

        window.parent.ShowIFrame();
    }
    
    return false;
}

function Local_LoadMe() {

    if (acterror_after_pid_entry_text1.style.display == "inline" ||
        acterror_after_pid_entry_text2.style.display == "inline") {
        
        var strPid = window.parent.PidObj.get_CurrentPID2();
        var strStrippedPid = "";

        var re = new RegExp("(.*)-(.*)-(.*)-(.*)","");
        if(re.exec(strPid) == null) {
            strStrippedPid = "";
        }
        else
        {
            strStrippedPid = RegExp.$1 + RegExp.$2 + RegExp.$3 + RegExp.$4;
        }


        g_PID_Link_URL = "https://pa.one.microsoft.com/portal.asp?req=" +
            strStrippedPid + "&err=" + window.parent.g_act_specific_error;

        acterror_link1.title = g_PID_Link_URL;
        acterror_link1.onclick = PID_Link_OnClick;
        acterror_link2.title = g_PID_Link_URL;
        acterror_link2.onclick = PID_Link_OnClick;

    }
}

</script>
</head>

<body style="background-Color: transparent; background-repeat: no-repeat;" topMargin=0 rightmargin=0 leftmargin=0 tabindex=-1
      onload="window.parent.act_desktop_error_LoadMe(); Local_LoadMe();" >

<table valign=middle border=0 cellpadding=0 cellspacing=0 width="100%" height="100%">
<tr>
    <td ID=leftmargincell width=5% height=99%></td>
    <td ID=maincell valign=top class="text-primary">

    <span ID=Title_Text class="title" style="display:none;">
        <ID id=acterror_s1>Windows ÇÃÉâÉCÉZÉìÉXîFèÿÇÃéËë±Ç´ÇçsÇ§</ID>
    </span>

    <br>

        <!-- Retail mode -->
        <span ID=acterror_description_dedicated_pid_RETAIL class="text-primary" style="display:none;">
            <ID id="txtActivDeskErrDedicatedPid1">Windows ÇÉCÉìÉXÉgÅ[ÉãÇ∑ÇÈÇ∆Ç´Ç…ÅAóLå¯Ç»ÉvÉçÉ_ÉNÉg ÉLÅ[Çì¸óÕÇµÇ‹ÇπÇÒÇ≈ÇµÇΩÅBWindows ÇÃÉâÉCÉZÉìÉXîFèÿÇë±çsÇ∑ÇÈèÍçáÇÕÅAâ∫ÇÃóìÇ…ÉvÉçÉ_ÉNÉg ÉLÅ[Çì¸óÕÇµÇƒ <b>[çXêV]</b> ÇÉNÉäÉbÉNÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB</ID>
            <br><br>
            <ID id="txtActivDeskErrDedicatedPid2">25 åÖÇÃÉvÉçÉ_ÉNÉg ÉLÅ[ÇÕÅAWindows CD ÉPÅ[ÉXÇÃó†Ç…ì\Ç¡ÇƒÇ†ÇÈÇ±ÇÃÇÊÇ§Ç»ÉXÉeÉbÉJÅ[Ç…ãLç⁄Ç≥ÇÍÇƒÇ¢Ç‹Ç∑:</ID>
            <br><br>
            <center><img src="../images/prodkey.gif"></center>
        </span>
        
        <!-- OEM mode -->
        <span ID=acterror_description_dedicated_pid_OEM class="text-primary" style="display:none;">
            <ID id="txtActivDeskErrDedicatedPid1x">Windows ÇÉCÉìÉXÉgÅ[ÉãÇ∑ÇÈÇ∆Ç´Ç…ÅAóLå¯Ç»ÉvÉçÉ_ÉNÉg ÉLÅ[Çì¸óÕÇµÇ‹ÇπÇÒÇ≈ÇµÇΩÅBWindows ÇÃÉâÉCÉZÉìÉXîFèÿÇë±çsÇ∑ÇÈèÍçáÇÕÅAâ∫ÇÃóìÇ…ÉvÉçÉ_ÉNÉg ÉLÅ[Çì¸óÕÇµÇƒ <b>[çXêV]</b> ÇÉNÉäÉbÉNÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB</ID>
            <br><br>
            <ID id="txtActivDeskErrDedicatedPid2x">25 åÖÇÃÉvÉçÉ_ÉNÉg ÉLÅ[ÇÕÅAÉRÉìÉsÉÖÅ[É^Ç…ìYïtÇµÇƒÇ†ÇÈÇ©ÅAêVÇµÇ¢ÉRÉìÉsÉÖÅ[É^Ç…ïtëÆÇµÇƒÇ¢ÇÈ Windows ÇÃÉhÉLÉÖÉÅÉìÉgÇ∆àÍèèÇ…Ç†ÇÈ Certificate of Authenticity (COA) ÉâÉxÉãÇ…Ç†ÇËÇ‹Ç∑ÅBCOA ÉâÉxÉãÇå©Ç¬ÇØÇÁÇÍÇ»Ç©Ç¡ÇΩèÍçáÇÕégópÇµÇƒÇ¢ÇÈÉRÉìÉsÉÖÅ[É^ÇÃêªë¢å≥Ç…ñ‚Ç¢çáÇÌÇπÇƒÇ≠ÇæÇ≥Ç¢ÅB</ID>
            <br><br>
            <center><img src="../images/oemcoa.jpg"></center>
        </span>


        <!-- PID ENTRY -->
        <span ID=acterror_pid_entry class="text-primary" style="display:none;">
            <br>
            <table ID=PidBox border=0 DIR=ltr style="font-family:Courier New; FONT-SIZE: 12pt;">
            <tr>
                <td nowrap width=10>&nbsp;</td>
                <td nowrap class="text-primary" >
                <span ID=acterror_description_verify_key class="text-primary"><ID id="txtverifykey">ÉLÅ[ÇämîFÇµÇƒÇ≠ÇæÇ≥Ç¢:</id></span>&nbsp;
                </td>
                <td>
                <input style="ime-mode:disabled" id=pid1 type="text" size=6 maxlength=5 class=pid-box TABINDEX=1 name="edtProductKey"
                onkeydown="window.parent.ProductIDKeyDown();" onpropertychange="window.parent.ProductIDPropertyChange();"
                onkeypress="window.parent.ProductIDKeyPress();" onkeyup="window.parent.ProductIDKeyUp();" onfocus="window.parent.OnFocus();">
                </td><td class="text-primary">-</td><td>
                <input style="ime-mode:disabled" id=pid2 type="text" size=6 maxlength=5 class=pid-box TABINDEX=2 name="edtProductKey"
                onkeydown="window.parent.ProductIDKeyDown();" onpropertychange="window.parent.ProductIDPropertyChange();"
                onkeypress="window.parent.ProductIDKeyPress();" onkeyup="window.parent.ProductIDKeyUp();" onfocus="window.parent.OnFocus();">
                </td><td class="text-primary">-</td><td>
                <input style="ime-mode:disabled" id=pid3 type="text" size=6 maxlength=5 class=pid-box TABINDEX=3  name="edtProductKey"
                onkeydown="window.parent.ProductIDKeyDown();" onpropertychange="window.parent.ProductIDPropertyChange();"
                onkeypress="window.parent.ProductIDKeyPress();" onkeyup="window.parent.ProductIDKeyUp();" onfocus="window.parent.OnFocus();">
                </td><td class="text-primary">-</td><td>
                <input style="ime-mode:disabled" id=pid4 type="text" size=6 maxlength=5 class=pid-box TABINDEX=4  name="edtProductKey"
                onkeydown="window.parent.ProductIDKeyDown();" onpropertychange="window.parent.ProductIDPropertyChange();"
                onkeypress="window.parent.ProductIDKeyPress();" onkeyup="window.parent.ProductIDKeyUp();" onfocus="window.parent.OnFocus();">
                </td><td class="text-primary">-</td><td>
                <input style="ime-mode:disabled" id=pid5 type="text" size=6 maxlength=5 class=pid-box TABINDEX=5  name="edtProductKey"
                onkeydown="window.parent.ProductIDKeyDown();" onpropertychange="window.parent.ProductIDPropertyChange();"
                onkeypress="window.parent.ProductIDKeyPress();" onkeyup="window.parent.ProductIDKeyUp();" onfocus="window.parent.OnFocus();">
                </td>
            </tr>
            </table>
        </span>

        <!-- AFTER PID ENTRY TEXT -->
        <span ID=acterror_after_pid_entry_OEMText class="text-primary" style="display:none;">
            <br>
            <ID id="txtActivDeskErrOEMText">COA ÉâÉxÉãÇ™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕÉRÉìÉsÉÖÅ[É^ÇÃêªë¢å≥Ç…òAóçÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB</ID><br>
        </span>

        <span ID=acterror_after_pid_entry_text1 class="text-primary" style="display:none;">
            <br>
            <ID id="txtActivDeskErr14">ê≥ÇµÇ¢ÉvÉçÉ_ÉNÉg ÉLÅ[Çì¸óÕÇµÇƒÇ¢ÇÈÇ…Ç‡Ç©Ç©ÇÌÇÁÇ∏Ç±ÇÃÉÅÉbÉZÅ[ÉWÇ™ï\é¶Ç≥ÇÍÇÈèÍçáÇÕÅAÉâÉCÉZÉìÉXîFèÿêÍópëãå˚Ç…ñ‚Ç¢çáÇÌÇπÇÈÇ©ÅAÇ‹ÇΩÇÕ<a href="#" id="acterror_link1"><U>Microsoft ÉâÉCÉZÉìÉXîFèÿ ÉAÉVÉXÉ^ÉìÉXÇÃ Web ÉTÉCÉg</u></a>ÇéQè∆ÇµÇƒí«â¡ÇÃÉvÉçÉ_ÉNÉg ÉLÅ[ÇÃèÓïÒÇéÊìæÇµÇƒÇ≠ÇæÇ≥Ç¢ÅBÇ®èZÇ‹Ç¢ÇÃínàÊÇÃòAóçî‘çÜÇímÇÈÇ…ÇÕ <B>[ìdòb]</B> ÇÉNÉäÉbÉNÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB</ID>
        </span>


        <span ID=acterror_after_pid_entry_text2 class="text-primary" style="display:none;">
            <br>
            <ID id="txtActivDeskErr15">ä‘à·Ç¡ÇΩëÄçÏÇÇµÇƒÇ¢Ç»Ç¢ÇÃÇ…Ç±ÇÃÉÅÉbÉZÅ[ÉWÇ™ï\é¶Ç≥ÇÍÇƒÇ¢ÇÈÇ∆évÇÌÇÍÇÈèÍçáÇÕÅAÉâÉCÉZÉìÉXîFèÿêÍópëãå˚Ç…ñ‚Ç¢çáÇÌÇπÇÈÇ©ÅAÇ‹ÇΩÇÕ<a href="#" id="acterror_link2"><U>Microsoft ÉâÉCÉZÉìÉXîFèÿ ÉAÉVÉXÉ^ÉìÉXÇÃ Web ÉTÉCÉg</u></a>ÇéQè∆ÇµÇƒí«â¡ÇÃÉvÉçÉ_ÉNÉg ÉLÅ[ÇÃèÓïÒÇéÊìæÇµÇƒÇ≠ÇæÇ≥Ç¢ÅBÇ®èZÇ‹Ç¢ÇÃínàÊÇÃòAóçî‘çÜÇímÇÈÇ…ÇÕ <B>[ìdòb]</B> ÇÉNÉäÉbÉNÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB</ID>
        </span>

        <span ID=acterror_after_pid_entry_text3 class="text-primary" style="display:none;">
            <br>
            <ID id="txtActivDeskErr16">Windows ÇÕàÍìxÇ… 1 ë‰ÇÃÉRÉìÉsÉÖÅ[É^Ç…ÇÃÇ›ÉCÉìÉXÉgÅ[ÉãÇ≈Ç´Ç‹Ç∑ÅBä‘à·Ç¡ÇΩëÄçÏÇÇµÇƒÇ¢Ç»Ç¢ÇÃÇ…Ç±ÇÃÉÅÉbÉZÅ[ÉWÇ™ï\é¶Ç≥ÇÍÇƒÇ¢ÇÈÇ∆évÇÌÇÍÇÈèÍçáÇÕÅA<B>[ìdòb]</B> ÇÉNÉäÉbÉNÇµÇƒÉâÉCÉZÉìÉXîFèÿêÍópëãå˚Ç…Ç®ìdòbÇ≠ÇæÇ≥Ç¢ÅB</ID>
        </span>

        <span ID=acterror_after_pid_entry_text4 class="text-primary" style="display:none;">
            <br>
            <ID id="txtActivDeskErr17">ÉvÉçÉ_ÉNÉg ÉLÅ[Çì¸óÕÇ∑ÇÈïKóvÇ™Ç»Ç¢èÍçáÇÕ <B>[ìdòb]</B> ÇÉNÉäÉbÉNÇµÇƒÅAëOÇÃÉâÉCÉZÉìÉXîFèÿÉyÅ[ÉWÇ…ñﬂÇ¡ÇƒÇ≠ÇæÇ≥Ç¢ÅB</ID>
        </span>
        
    <!-- End -->
    </td>

    <td ID=rightmargincell width=7%>
    </td>
</tr>
<tr>
    <td colspan=3>
    <br>
    <table border=0 class="buttonpositionnew">
    <tr>
        <td width=99%>
            &nbsp;&nbsp;
            <span ID=acterror_specific_error_code class="text-primary" style="display:none; z-index:10;">
            </span>
        </td>
        <td>
        <BUTTON ID="btnTelephone" class="buttons" TABINDEX=6 ACCESSKEY="T"><label for=btnTelephone><id id="LocalBtnTel_Text">ìdòb(<u>T</u>)</id></label></BUTTON>
        </td>
        <td>
        <BUTTON ID="btnQuit" class="buttons" TABINDEX=7 ACCESSKEY="R"><label for=btnQuit><id id="LocalBtnQuit_Text">å„Ç≈í ímÇ∑ÇÈ(<u>R</u>)</id></label></BUTTON>
        </td>
        <td>
        <BUTTON ID="btnNext" class="buttons" TABINDEX=8 ACCESSKEY="E"><label for=btnNext><id id="LocalBtnRetry_Text">çƒééçs(<u>E</u>)</id></label></BUTTON>
        </td>
    </tr>
    </table>
    </td>
</tr>
</table>

</body>
</html>
GIF89a0 0 ˜   1ú 9• B• Jµ Rµ ZÑ Zú c  c c) c1 cJ cs c∆ kÑ k• kŒ s  s s s1 {å {Ω {ﬁ Ñ  Ñ Ñ) Ñ9 Ñ{ Ñ• ÑÔ åî î îk îú îµ îŒ î˜JÑc!9{9•B•Zcc!îÑúsú˜B•ZJc9k÷{Œús•Z•å!9k!JÑ!J•!J•!Jµ!Zc!cJ!cs!k≠!•÷)ZÑ)cZ)k÷){∆)≠˜)≠ˇ1Jk1RΩ1cc1ck1≠•1µ1µÑ9BR9BZ9cŒ9{c9Ñc9Ñs9úﬁ9≠ˇ9µˇ9µˇBZsBcÑBcåBcúBc∆BåﬁB•JBµJJ≠JJµJc≠JcΩJcŒJkŒJ•ÁJµ˜JµˇJΩJJΩ∆JΩˇJ∆)J∆˜RRRRRZRRsRZ•RkΩRîﬁR≠BR∆)R∆RR∆kZZZZZµZZ∆Zs÷Zs÷ZÑﬁZîΩZ•ﬁZµÔZ∆JZ∆ˇccccc{cÑúcå÷cú•cŒ1cŒccŒÑcŒ÷kkåkkîkk∆kÑŒkú÷k•ÁkµÁkµÔkΩˇk∆˜kŒ9kŒ9kŒ•k÷ˇsssssÑss•ssµss∆ss∆s•ssΩZsŒJs÷cs÷ss÷å{ÑΩ{î∆{î÷{•ﬁ{≠ﬁ{µﬁ{÷Z{÷Ñ{÷Ô{÷ˇÑÑÑÑÑ≠ÑÑµÑÑ∆Ñ•ΩÑΩ{ÑﬁZÑﬁcÑﬁ•ÑﬁΩåååååîåå•åå≠ååµåå∆åîΩåî÷å•Ωå≠ﬁåµŒåΩååΩ÷å∆Áå÷˜åﬁsåﬁååﬁîîîúîîúîîΩîîŒîúΩîúŒî∆ﬁîŒÁîÁµîÁΩîÁˇú  úµ≠úÁÑúÁˇúÔú••••∆ﬁ•÷Ô•÷˜•Áå•Á••ÔŒ•Ô˜≠≠Ω≠≠Œ≠∆÷≠∆Á≠Ô≠≠ÔÁ≠Ô˜µﬁÁµ˜µΩΩ÷Ω˜µ∆∆∆∆˜Œ∆˜˜∆ˇŒ∆ˇÁŒ  Œ1 ŒŒ÷ﬁﬁﬁﬁﬁÁÁ˜˜ÔÔÔ˜˜˜ˇ1 ˇˇˇ ˇ !˘  ˇ ,    0 0 « 1ú 9• B• Jµ Rµ ZÑ Zú c  c c) c1 cJ cs c∆ kÑ k• kŒ s  s s s1 {å {Ω {ﬁ Ñ  Ñ Ñ) Ñ9 Ñ{ Ñ• ÑÔ åî î îk îú îµ îŒ î˜JÑc!9{9•B•Zcc!îÑúsú˜B•ZJc9k÷{Œús•Z•å!9k!JÑ!J•!J•!Jµ!Zc!cJ!cs!k≠!•÷)ZÑ)cZ)k÷){∆)≠˜)≠ˇ1Jk1RΩ1cc1ck1≠•1µ1µÑ9BR9BZ9cŒ9{c9Ñc9Ñs9úﬁ9≠ˇ9µˇ9µˇBZsBcÑBcåBcúBc∆BåﬁB•JBµJJ≠JJµJc≠JcΩJcŒJkŒJ•ÁJµ˜JµˇJΩJJΩ∆JΩˇJ∆)J∆˜RRRRRZRRsRZ•RkΩRîﬁR≠BR∆)R∆RR∆kZZZZZµZZ∆Zs÷Zs÷ZÑﬁZîΩZ•ﬁZµÔZ∆JZ∆ˇccccc{cÑúcå÷cú•cŒ1cŒccŒÑcŒ÷kkåkkîkk∆kÑŒkú÷k•ÁkµÁkµÔkΩˇk∆˜kŒ9kŒ9kŒ•k÷ˇsssssÑss•ssµss∆ss∆s•ssΩZsŒJs÷cs÷ss÷å{ÑΩ{î∆{î÷{•ﬁ{≠ﬁ{µﬁ{÷Z{÷Ñ{÷Ô{÷ˇÑÑÑÑÑ≠ÑÑµÑÑ∆Ñ•ΩÑΩ{ÑﬁZÑﬁcÑﬁ•ÑﬁΩåååååîåå•åå≠ååµåå∆åîΩåî÷å•Ωå≠ﬁåµŒåΩååΩ÷å∆Áå÷˜åﬁsåﬁååﬁîîîúîîúîîΩîîŒîúΩîúŒî∆ﬁîŒÁîÁµîÁΩîÁˇú  úµ≠úÁÑúÁˇúÔú••••∆ﬁ•÷Ô•÷˜•Áå•Á••ÔŒ•Ô˜≠≠Ω≠≠Œ≠∆÷≠∆Á≠Ô≠≠ÔÁ≠Ô˜µﬁÁµ˜µΩΩ÷Ω˜µ∆∆∆∆˜Œ∆˜˜∆ˇŒ∆ˇÁŒ  Œ1 ŒŒ÷ﬁﬁﬁﬁﬁÁÁ˜˜ÔÔÔ˜˜˜ˇ1 ˇˇˇ ˇ ˛ ˝	H∞†¡É*L(ÔNõD£p)˜.ﬁºpÒ∆ç∫Ñ«âç.\»aD9~ﬁÀw5jÁ–°ìGìπk´ººxQ¢ßáê0`àaÇCÑtCyO_0M∞í]ª∂ÌöÕõUì¡Zuhê7hÿ–˘· Ç®¿Ää-r∆†»•Jsg∞\π¬¶ØﬂΩi$•˙⁄,hùûdí£1%y
ıõLŸ^?{›·€áíø|¯ôsgÆ04`•eïSHπ2¡~ı`◊√ñÚ ?y’Jπb∂Lõ+e£0%”‰Ö#”Ï÷>(èç"_Íà≤e¨z6Q£L¡“4Ë»N Ñ˛-˚`ó›|∫9Î’ÃWØaÁÿ—î∑n›∂dßíÈá≈_í°T ¡Ä8¿@'»‡Éã!±î@˜∏… ÉX¢	T¸Ae!ÖÉ<≤árÏ†K°Ç
;¿C]tAF;†∆.˚ ‰0F§:–<‚·èûòS4æt«±‡ce	…&P9—‹Zh˜TÈiÂ†6KÑú¥Pl`Êl -wê>Ú\ÛJ.ô¡∆åXíL>f.ß9A("7ØåÛŒ8„0\`‹”xPùu$OMÄQ«%£‹í9‚(£=Î$£âFdABQAÜ‘òRïÕ4„L3˛ΩƒÍK4¥Js*à‚F—S	 HTY+OA†≠d%<—Ùå,≤Ãr
*ıaµ!|pËl0lY,(∏D›‘œ=¨D5U}Î–«ÓT…†B…ÖñP(	„a∞@§•¬ &(!\9‰¡®?Óîcâ%¸EïToG	$î-{‡É1 ¿V  ÑºãdÏÄ!«dN4l|≈·À¢±küÄ‚	(fò1«9ÁÃ]®Ä¬Ñî´ê4ê°¥L£Åå9„N>WñÛã4Öl¢§g˚p÷ZAó¡6ê>ÓÏC-Ê‰ìœ=•—Úâ€û@„L9lVÊ@≠µÜ˛ﬁıÃf>˘t8ïÊcŒ·Cö”I™"∂e{˚&l¥	¥œ=ª‚à,œt˛L'éƒG±¿”xJ}ßﬁ76ÿ‹›Ëôh √é>˙º˛∫>ÎËíâ2¶¥2ä"Ç⁄XXr∞ÌÒCé2§(ìã8’DØ.£$“F-Ñt¡Äún;?Ííà"≠,C=Ò§≥é5ÍìH|áí∂ÎcJ§â`“ä2Ã`öN<h"≈"–Ñà¿4JQhê≤:È#h⁄`Jç‚7∏ÿ9`14¯ä ËÄ20ÅP ¶K	h‘F5+!Ó—Ö,B!æÍ	Ñ2¨0†˛«CàîÜqåcP„ÌöO}ÆA:(Õ;<)ÅÇÖÅ	,`
`¡î‚∫Å|§9ú9û!ãh∏kSYFE)v`á„ó~@.¶ nË)G{dËzÉ‰†Ü'»QïkDES¿¿F ë8†áPêÛ |î√√(∆4¿ëD%⁄§*†@F√4a	ˇà«Ñ‚∞(a	[P]òrèñ¿Ç*Va9–x≠§bBr√!Ü-¨R-l…,±(4CU˚`Ü‘U»^≤?ê‡ÀH¯‡ XÅ ÷Ú1èÌ`sÄíîwL¬Bã',÷!åÈ!d ˛¡2±®e‡¡\Dê}∏n†PΩÍE óÅ>“C»êÑ-å!	$së¯‡‡Õ†üA∆òÜæ»,°_ëY_ÆÄ?–Bh+¬¢3‘4	< †êáº!ƒpt0p8T¢V†£9~aY†,=›à*<‡ë∑ \f§ßÿâ“*Ås|bbC'∞çŒubFw˚⁄í,S/ñÜÓ†Öih—˘HtyÄ!6Që‚M≠ìâ[Îa–ÆYn°9Lœvä1≠IUçú?`Cπhé3¸>ÿFh<„p≥ÿÑ˜^cô¿ˆol•>¢∏).mS5>á/†—*rîù‹ò*∑èrpÇnU≤Ró⁄à—=ˆKîÂ€lrπnƒby»√AàXt√t]¸ÎXw∑Ä  ;PPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDING                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v e n t H a n d l e r   ˇˇˇˇS O F T W A R E \ M i c r o s o f t \ W i n d o w s \ C u r r e n t V e r s i o n \ E x p l o r e r \ A u t o p l a y H a n d l e r s \ H a n d l e r s \ M S W i a E v e n t H a n d l e r     ˇˇˇˇP r o g I D     ˇˇˇˇW i a D e v M g r   ˇˇˇˇA c t i o n     ò3  @ % s y s t e m r o o t % \ S y s t e m 3 2 \ w i a a c m g r . e x e , - 2 7 6     ˇˇˇˇ@ % s y s t e m r o o t % \ S y s t e m 3 2 \ w i a a c m g r . e x e , - 1 0 1     \.  D e f a u l t I c o n   î  % s y s t e m r o o t % \ S y s t e m 3 2 \ w i a a c m g r . e x e , - 2   ˇˇˇˇC L S I D \ { 0 5 2 7 d 1 d 0 - 8 8 c 2 - 1 1 d 2 - 8 2 c 7 - 0 0 c 0 4 f 8 e c 1 8 3 }     ˇˇˇˇW I A   V i d e o   C a m e r a   d r i v e r   ˇˇˇˇC L S I D \ { 0 5 2 7 d 1 d 0 - 8 8 c 2 - 1 1 d 2 - 8 2 c 7 - 0 0 c 0 4 f 8 e c 1 8 3 } \ I n P r o c S e r v e r 3 2   ˇˇˇˇC : \ W I N D O W S \ s y s t e m 3 2 \ w i a v u s d . d l l   <  C L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 }     ˇˇˇˇW I A   F i l e S y s t e m   U S D     –
  C L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ I n P r o c S e r v e r 3 2   ˇˇˇˇC : \ W I N D O W S \ s y s t e m 3 2 \ f s u s d . d l l   ˇˇˇˇS Y S T E M \ C u r r e n t C o n t r o l S e t \ C o n t r o l \ S t i l l I m a g e \ E v e n t s \ C o n n e c t e d     ¨  G U I D     ˇˇˇˇ{ A 2 8 B B A D E - 6 4 B 6 - 1 1 D 2 - A 2 3 1 - 0 0 C 0 4 F A 3 1 8 0 9 }     ˇˇˇˇL a u n c h A p p l i c a t i o n s     ˇˇˇˇ*   ˇˇˇˇS Y S T E M \ C u r r e n t C o n t r o l S e t \ C o n t r o l \ S t i l l I m a g e \ E v e n t s \ D i s c o n n e c t e d   ˇˇˇˇ{ 1 4 3 E 4 E 8 3 - 6 4 9 7 - 1 1 D 2 - A 2 3 1 - 0 0 C 0 4 F A 3 1 8 0 9 }     ˇˇˇˇS Y S T E M \ C u r r e n t C o n t r o l S e t \ C o n t r o l \ S t i l l I m a g e \ E v e n t s \ S c a n B u t t o n   º  { A 6 C 5 A 7 1 5 - 8 C 6 E - 1 1 D 2 - 9 7 7 A - 0 0 0 0 F 8 7 A 9 2 6 F }     ˇˇˇˇS Y S T E M \ C u r r e n t C o n t r o l S e t \ C o n t r o l \ S t i l l I m a g e \ E v e n t s \ S T I P r o x y E v e n t     º  { d 7 1 1 f 8 1 f - 1 f 0 d - 4 2 2 d - 8 6 4 1 - 9 2 7 d 1 b 9 3 e 5 e 5 }     ˇˇˇˇS Y S T E M \ C u r r e n t C o n t r o l S e t \ C o n t r o l \ S t i l l I m a g e \ E v e n t s \ C o n n e c t e d \ { D 1 3 E 3 F 2 5 - 1 6 8 8 - 4 5 A 0 - 9 7 4 3 - 7 5 9 E B 3 5 C D F 9 A }   ˇˇˇˇN a m e     ˇˇˇˇD e s c     ˇˇˇˇw i a a c m g r . e x e , - 2   ˇˇˇˇS Y S T E M \ C u r r e n t C o n t r o l S e t \ C o n t r o l \ S t i l l I m a g e \ E v e n t s \ S c a n B u t t o n \ { D 1 3 E 3 F 2 5 - 1 6 8 8 - 4 5 A 0 - 9 7 4 3 - 7 5 9 E B 3 5 C D F 9 A }     ˇˇˇˇS e r v i c e I n s t a l l a t i o n   ˇˇˇˇr u n d l l 3 2 . e x e     C : \ W I N D O W S \ s y s t e m 3 2 \ s t i _ c i . d l l , I n s t a l l W i a S e r v i c e     |9  s t i . s c s i s e c t i o n   ˇˇˇˇC o p y F i l e s   ∏*  c o p y f i l e s   ˇˇˇˇs c s i s c a n       0 x 0 0 0 0 0 0 0 2     ˇˇˇˇS T I . S c s i S c a n . A d d S e r v i c e   ú,  s t i . s c s i s e c t i o n . s e r v i c e s     ˇˇˇˇs c s i s c a n . s y s     +  s t i . s c s i s c a n . a d d s e r v i c e   ¿  1     3   ˇˇˇˇC : \ W I N D O W S \ s y s t e m 3 2 \ D R I V E R S \ s c s i s c a n . s y s     ˇˇˇˇL o a d O r d e r G r o u p     D,  l o a d o r d e r g r o u p     ˇˇˇˇB a s e     ˇˇˇˇs t i . u s b s e c t i o n     ˇˇˇˇu s b s c a n   ˇˇˇˇS T I . U s b S c a n . A d d S e r v i c e       s t i . u s b s e c t i o n . s e r v i c e s   ˇˇˇˇu s b s c a n . s y s   ‘,  s t i . u s b s c a n . a d d s e r v i c e     ˇˇˇˇC : \ W I N D O W S \ s y s t e m 3 2 \ D R I V E R S \ u s b s c a n . s y s   ˇˇˇˇs t i . s e r i a l s e c t i o n   ˇˇˇˇS t i l l C a m     L  S T I . S t i l l C a m e r a . A d d S e r v i c e     à  s t i . s e r i a l s e c t i o n . s e r v i c e s     <-  s e r s c a n . s y s    .  s t i . s t i l l c a m e r a . a d d s e r v i c e     å-  C : \ W I N D O W S \ s y s t e m 3 2 \ D R I V E R S \ s e r s c a n . s y s   ˇˇˇˇs t i . s b p 2 s e c t i o n   ¥  s t i . s b p 2 s e c t i o n . s e r v i c e s     ˇˇˇˇs t i . p t p u s b s e c t i o n   ˇˇˇˇS T I . P T P U S B . A d d R e g   ƒ0  S T I . U s b . A d d R e g     ‰  S T I . P T P U S B . C o p y F i l e s     H2  D e v i c e D a t a     D0  d e v i c e d a t a     ˇˇˇˇS T I . P T P U S B D e v i c e D a t a     ˇˇˇˇS u b C l a s s     ¨0  s u b c l a s s     <  D e v i c e T y p e     ‹0  d e v i c e t y p e     ‰5  2   ˇˇˇˇC a p a b i l i t i e s     1  c a p a b i l i t i e s     ˇˇˇˇ0 x 3 5     ˇˇˇˇU n i n s t a l l S e c t i o n     l1  u n i n s t a l l s e c t i o n     ˇˇˇˇE v e n t s     º1  e v e n t s     ˇˇˇˇS T I . P T P U S B D e v i c e E v e n t s     0  s t i . p t p u s b . c o p y f i l e s     ˇˇˇˇp t p u s d . d l l     ˇˇˇˇp t p u s b . d l l     »/  s t i . p t p u s b . a d d r e g   Ù  H a r d w a r e C o n f i g     ˇˇˇˇU S D C l a s s     ˇˇˇˇ{ B 5 E E 9 0 B 0 - D 5 C 5 - 1 1 D 2 - 8 2 D 5 - 0 0 C 0 4 F 8 E C 1 8 3 }     ˇˇˇˇC L S I D \ { B 5 E E 9 0 B 0 - D 5 C 5 - 1 1 D 2 - 8 2 D 5 - 0 0 C 0 4 F 8 E C 1 8 3 }     ˇˇˇˇP I M A 1 5 7 4 0   C a m e r a s   W I A   U S D   ˇˇˇˇC L S I D \ { B 5 E E 9 0 B 0 - D 5 C 5 - 1 1 D 2 - 8 2 D 5 - 0 0 C 0 4 F 8 E C 1 8 3 } \ I n P r o c S e r v e r 3 2   P  C : \ W I N D O W S \ s y s t e m 3 2 \ p t p u s d . d l l     ˇˇˇˇC L S I D \ { 6 5 a a b 9 6 d - 7 1 b 5 - 4 4 d 1 - a b 9 e - 4 8 8 f 7 3 0 e 7 8 7 0 }     ˇˇˇˇP I M A 1 5 7 4 0   U S B   T r a n s p o r t   ˇˇˇˇC L S I D \ { 6 5 a a b 9 6 d - 7 1 b 5 - 4 4 d 1 - a b 9 e - 4 8 8 f 7 3 0 e 7 8 7 0 } \ I n P r o c S e r v e r 3 2   ˇˇˇˇC : \ W I N D O W S \ s y s t e m 3 2 \ p t p u s b . d l l     |0  s t i . p t p u s b d e v i c e d a t a     ˇˇˇˇM o d e l   6  m o d e l   ˇˇˇˇP I M A 1 5 7 4 0   ˇˇˇˇS e r v e r     L6  s e r v e r     d2  l o c a l   ˇˇˇˇU I   D L L     Ñ6  u i   d l l     ˇˇˇˇs t i . d l l   ˇˇˇˇU I   C l a s s   I D   ¿6  u i   c l a s s   i d   Ù  { 4 D B 1 A D 1 0 - 3 3 9 1 - 1 1 D 2 - 9 A 3 3 - 0 0 C 0 4 F A 3 6 1 4 5 }     ˇˇˇˇT r a n s p o r t C L S I D     L7  t r a n s p o r t c l s i d     ˇˇˇˇ{ 6 5 a a b 9 6 d - 7 1 b 5 - 4 4 d 1 - a b 9 e - 4 8 8 f 7 3 0 e 7 8 7 0 }     ‰1  s t i . p t p u s b d e v i c e e v e n t s     ˇˇˇˇC o n n e c t e d   8  c o n n e c t e d   ˇˇˇˇ% D C C o n n e c t e d %   Ù$  { A 2 8 B B A D E - 6 4 B 6 - 1 1 d 2 - A 2 3 1 - 0 0 C 0 4 F A 3 1 8 0 9 }     ˇˇˇˇD i s c o n n e c t e d     ¿8  d i s c o n n e c t e d     ˇˇˇˇ% D C D i s c o n n e c t e d %      &  { 1 4 3 E 4 E 8 3 - 6 4 9 7 - 1 1 d 2 - A 2 3 1 - 0 0 C 0 4 F A 3 1 8 0 9 }     ˇˇˇˇs t i . w i a v i d e o . r e g i s t r a t i o n   ˇˇˇˇA d d R e g     ˇˇˇˇS T I . W I A V i d e o . A d d R e g   ˇˇˇˇS T I . W I A V i d e o D e v i c e D a t a     »9  s t i . w i a v i d e o . a d d r e g   P
  { 0 5 2 7 d 1 d 0 - 8 8 c 2 - 1 1 d 2 - 8 2 c 7 - 0 0 c 0 4 f 8 e c 1 8 3 }     Ù9  s t i . w i a v i d e o d e v i c e d a t a     ˇˇˇˇ{ 5 d 8 e f 5 a 3 - a c 1 3 - 1 1 d 2 - a 0 9 3 - 0 0 c 0 4 f 7 2 d c 3 c }     D  w i a f s . a d d r e g     –1  C L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . j p g     ˇˇˇˇG e n e r i c   Ã  i m a g e   ˇˇˇˇF o r m a t G U I D     ƒ  { B 9 6 B 3 C A E - 0 7 2 8 - 1 1 D 3 - 9 D 7 B - 0 0 0 0 F 8 1 E F 3 2 E }     ˇˇˇˇC L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . b m p     ˇˇˇˇ{ B 9 6 B 3 C A B - 0 7 2 8 - 1 1 D 3 - 9 D 7 B - 0 0 0 0 F 8 1 E F 3 2 E }     ˇˇˇˇC L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . e x i f   ˇˇˇˇ{ B 9 6 B 3 C B 2 - 0 7 2 8 - 1 1 D 3 - 9 D 7 B - 0 0 0 0 F 8 1 E F 3 2 E }     |F  C L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . f p x     ˇˇˇˇ{ B 9 6 B 3 C B 4 - 0 7 2 8 - 1 1 D 3 - 9 D 7 B - 0 0 0 0 F 8 1 E F 3 2 E }     ˇˇˇˇC L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . g i f     ˇˇˇˇ{ B 9 6 B 3 C B 0 - 0 7 2 8 - 1 1 D 3 - 9 D 7 B - 0 0 0 0 F 8 1 E F 3 2 E }     ˇˇˇˇC L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . j p 2     ˇˇˇˇ{ 3 4 4 E E 2 B 2 - 3 9 D B - 4 D D E - 8 1 7 3 - C 4 B 7 5 F 8 F 1 E 4 9 }     ¥	  C L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . j p e g   ˇˇˇˇC L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . p c d     ò6  { B 9 6 B 3 C B 3 - 0 7 2 8 - 1 1 D 3 - 9 D 7 B - 0 0 0 0 F 8 1 E F 3 2 E }     ˇˇˇˇC L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . p i c     ˇˇˇˇ{ A 6 B C 8 5 D 8 - 6 B 3 E - 4 0 E E - A 9 5 C - 2 5 D 4 8 2 E 4 1 A D C }     PM  C L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . p n g     ˇˇˇˇ{ B 9 6 B 3 C A F - 0 7 2 8 - 1 1 D 3 - 9 D 7 B - 0 0 0 0 F 8 1 E F 3 2 E }     `6  C L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . t i f     ˇˇˇˇ{ B 9 6 B 3 C B 1 - 0 7 2 8 - 1 1 D 3 - 9 D 7 B - 0 0 0 0 F 8 1 E F 3 2 E }     ˇˇˇˇC L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . t i f f   ˇˇˇˇC L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . w m f     ˇˇˇˇ{ B 9 6 B 3 C A D - 0 7 2 8 - 1 1 D 3 - 9 D 7 B - 0 0 0 0 F 8 1 E F 3 2 E }     xK  C L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . m i x     ˇˇˇˇC L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . a v i     ˇˇˇˇv i d e o   d  { 3 2 F 8 C A 1 4 - 0 8 7 C - 4 9 0 8 - B 7 C 4 - 6 7 5 7 F E 7 E 9 0 A B }     ˇˇˇˇC L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . a s f     ˇˇˇˇ{ 8 D 9 4 8 E E 9 - D 0 A A - 4 A 1 2 - 9 D 9 A - 9 C C 5 D E 3 6 1 9 9 B }     ˇˇˇˇC L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . m o v     E  C L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . m p e g   ÙR  { E C D 7 5 7 E 4 - D 2 E C - 4 F 5 7 - 9 5 5 D - B C F 8 A 9 7 C 4 E 5 2 }     ˇˇˇˇC L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . m p g     ˇˇˇˇC L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . w m v     ˇˇˇˇC L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . w a v     ˇˇˇˇa u d i o   \1  { F 8 1 8 E 1 4 6 - 0 7 A F - 4 0 F F - A E 5 5 - B E 8 F 2 C 0 6 5 D B E }     <  C L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . m p 3     †/  { 0 F B C 7 1 F B - 4 3 B F - 4 9 F 2 - 9 1 9 0 - E 6 F E C F F 3 7 E 5 4 }     |%  C L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . w m a     ˇˇˇˇ{ D 6 1 D 6 4 1 3 - 8 B C 2 - 4 3 8 F - 9 3 A D - 2 1 B D 4 8 4 D B 6 A 1 }     ˇˇˇˇC L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . t x t     ˇˇˇˇt e x t     ˇˇˇˇ{ F A F D 4 D 8 2 - 7 2 3 F - 4 2 1 F - 9 3 1 8 - 3 0 5 0 1 A C 4 4 B 5 9 }     ˇˇˇˇC L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . h t m     ˇˇˇˇ{ c 9 9 a 4 e 6 2 - 9 9 d e - 4 a 9 4 - a c c a - 7 1 9 5 6 a c 2 9 7 7 d }     ˇˇˇˇC L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . h t m l   ˇˇˇˇC L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . x m l     ˇˇˇˇ{ b 9 1 7 1 4 5 7 - d a c 8 - 4 8 8 4 - b 3 9 3 - 1 5 b 4 7 1 d 5 f 0 7 e }      ?  C L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . d o c     ˇˇˇˇ{ 5 7 3 d d 6 a 3 - 4 8 3 4 - 4 3 2 d - a 9 b 5 - e 1 9 8 d d 9 e 8 9 0 d }     ˇˇˇˇC L S I D \ { D 2 9 2 3 B 8 6 - 1 5 F 1 - 4 6 F F - A 1 9 A - D E 8 2 5 F 9 1 9 5 7 6 } \ S u p p o r t e d E x t e n s i o n \ . r t f     ˇˇˇˇs t i . m i c r o d r i v e r s e c t i o n     ˇˇˇˇS T I . M I C R O D R I V E R S e c t i o n . A d d R e g   (S  s t i . m i c r o d r i v e r s e c t i o n . a d d r e g   ˇˇˇˇ{ B B 6 C F 8 E 2 - 1 5 1 1 - 4 0 b d - 9 1 B A - 8 0 D 4 3 C 5 3 0 6 4 E }     ˇˇˇˇC L S I D \ { B B 6 C F 8 E 2 - 1 5 1 1 - 4 0 b d - 9 1 B A - 8 0 D 4 3 C 5 3 0 6 4 E }     ˇˇˇˇM i c r o s o f t   F l a t b e d   D r i v e r     ˇˇˇˇC L S I D \ { B B 6 C F 8 E 2 - 1 5 1 1 - 4 0 b d - 9 1 B A - 8 0 D 4 3 C 5 3 0 6 4 E } \ I n P r o c S e r v e r 3 2   G  C : \ W I N D O W S \ s y s t e m 3 2 \ w i a f b d r v . d l l     ˇˇˇˇw i a f b d r v . d l l     S i g n a t u r e   $ W I N D O W S   N T $   C l a s s   I m a g e   C l a s s G U I D   { 6 b d d 1 f c 6 - 8 1 0 f - 1 1 d 0 - b e c 7 - 0 8 0 0 2 b e 2 0 9 2 f }   P r o v i d e r   M i c r o s o f t   L a y o u t F i l e   L A Y O U T . I N F   D r i v e r V e r   0 7 / 0 1 / 2 0 0 1       Ù         H        L        »        d                 ¥  (   $   î*     L   P+     O         P   ®+     Q   ú,     W   -     Z   à     [   X-     \   ‡-     b   \.     e   Ù     f   ¥.     g   D/     m   h/     p   †/     q   2     y   Ä2     {   ‰5     É   Ë7     à   |9     ä   (:     å   ®:     ç   0;  7   ê   ÙR     «   hS     …   t     Õ                         	                                        !     $     '     *     -     0     3     6     9     <     ?     C     G     K     O     S     V     Z     _     b     e     h     k     n     q      t      y      ~      É      à      ç      í      ó      ú      °      ¶      ´      ∞      µ      ∑      º      ¡      ∆      À      –      ’      ⁄      ﬂ      ‰      È      Ó      Û      ¯      ˝                                          %     *     /     4    9    <    ?    D    I    K    N    Q    T    W    Z    ]    `    c    h    m    o    r    u    x    {    ~    Å    Ñ    á    å    ë    ì    ñ    ô    ú    ü    ¢    •    ®    ´    ∞    µ    π    Ω    ¿    √    ∆    …    Ã    œ    —     ”     ÿ     ›     ‚     Á     Ï     Ò     ˆ    ˚    ˛                
                         "    %     (     -     2     7     <     A     F     K     P     U     Z     _     d     i     n     s     x     }     Ç     á     å     ë     ñ     õ     †     •     ™     Ø     ¥     π     æ     √     »     Õ     “     ◊     ‹     ·     Ê     Î          ı     ˙     ˇ          	                         "     '     ,     1     6    ;    >     A     F     K     P    U      (  ú  Ä  ∏  4	  (	  @	  ¥	  †	  »	  @
  0
  P
  Ä
  h
  ò
  –
  º
  ‰
  <  (  P  º  î  ‰  4    X  ¨  Ñ  ‘  H     p    ‹  4  î  x  ∞  L  0  h  –  ¥  Ï  t  \  å  º  ¨  Ã  Ù  ‹    x  `  P
  ¨  ê  »  ¸  ‰    0  î  p  ∏  ƒ     Ï  ∏  ƒ  à  T  ∏  ƒ  Ù  º  ∏  ƒ  t  ,  º        D  º  †  <  ÿ  ‡  |  `  4  ¥  ò  ∞  Ï  –    <  $  T  ê  p  ∞  Ï  Ã    <    \  ‡  ÿ  ÿ  ÿ  ò
  ‡  ÿ  Ï  ÿ    ‡  ÿ  <  ÿ  d  ‡  ÿ  ¨  ÿ  º  ƒ  ‘  T  |  ò  ƒ  ‘  ‰    $  ƒ  @  ÿ  ÿ  ‰
  ƒ  @  º  ÿ  Ã  ƒ  ‘  ÿ  ÿ  P  ƒ  ‘  º  ÿ  Ã  P  `  ÿ  ÿ  ¿  P  ‹  ÿ  ÿ  X  P  ‹  î  ÿ  ∏  P  »  ƒ  ¨  Ä  ÿ  ÿ  ƒ  ®  l   ÿ  Ä   ƒ  ®  ò   ÿ  ¨   ƒ  ®  `  ÿ  !  ƒ  ®  \!  |  x!  P  »!  ÿ  ÿ  ("  P  \"  ÿ  ÿ  ÿ"  P  \"  î  ÿ  ∏  P  #  ÿ  ÿ  |#  P  ®#  ÿ  ÿ  $$  P  ®#  î  ÿ  ∏  ƒ  d$  ‰$  ÿ  Ù$  ƒ  d$  H%  ÿ  t%  ƒ  |%  ‰$  ÿ   &  ƒ  |%  H%  ÿ  t%  ƒ  T&  ‰$  ÿ  ‘&  ƒ  T&  H%  ÿ  t%  ƒ  ('  ‰$  ÿ  ∞'  ƒ  ('  H%  ÿ  t%  ƒ  (  –(  ÿ  h  ƒ  (  ‡(  ÿ  Ï  ƒ  (  ¨  ÿ  (  ƒ  )  –(  ÿ  h  ƒ  )  ‡(  ÿ  Ï  ƒ  )  ¨  ÿ  (  ƒ  »	  ‰)  ÿ  *      ÿ  –*  ∏*  Ï  º  †  Ë*   +  +  º  †  Ë*   +  +  à+  à+  |  `  ‰  Ï  –  ‹+  <  $  ‰+  ê  p  ‹+  <    Ï+  h,  D,  å,      ÿ  –*  ∏*  T  º  †  ¿,   +  ‘,  º  †  ¿,   +  ‘,  <-  <-  |  `  X  Ï  –  ‹+  <  $  ‰+  ê  p  ‹+  <    å-  h,  D,  å,      ÿ  –*  ∏*  º  º  †  .   +   .  º  †  .   +   .  ò.  ò.  |  `  ‘  Ï  –  ‹+  <  $  ‰+  ê  p  ‹+  <    .  h,  D,  å,      ÿ  –*  ∏*  Ï  º  †  Ë*   +  +  º  †  Ë*   +  +      »/  /  –*  ∏*  0  T  `0  D0  |0  ƒ0  ¨0  ¿  ¯0  ‹0  1  <1  1  \1  î1  l1  ÿ  –1  º1  ‰1  H2  H2  d2  d2  ‡  ÿ  ®2  ‹+  Ã  ‡  ÿ  Ã2  ÿ  ‰2  P  83  ÿ  ÿ  ò3  P  –3  ÿ  ÿ  L4  P  –3  î  ÿ  ∏  P  ê4  ÿ  ÿ  4  P  $5  ÿ  ÿ  †5  P  $5  î  ÿ  ∏  $6  6  46  `6  L6  t6  ò6  Ñ6  ¨6  ‹6  ¿6  ¯6  p7  L7  î7  48  8  L8  l8  t%  ‡8  ¿8   9  (9  t%    ¥9  »9  `0  D0  Ù9  ‡  ÿ  Ã2  ÿ  T:  `6  L6  t6  ò6  Ñ6  ¨6  ‹6  ¿6  ‹:  P  P;  ‡;  ÿ  Ù;  P  P;  <  ÿ   <  P  t<  ‡;  ÿ  Ù;  P  t<  <  ÿ  =  P  X=  ‡;  ÿ  Ù;  P  X=  <  ÿ  Ë=  P  <>  ‡;  ÿ  Ù;  P  <>  <  ÿ  Ã>  P   ?  ‡;  ÿ  Ù;  P   ?  <  ÿ  ∞?  P  @  ‡;  ÿ  Ù;  P  @  <  ÿ  î@  P  Ë@  ‡;  ÿ  Ù;  P  Ë@  <  ÿ   <  P  xA  ‡;  ÿ  Ù;  P  xA  <  ÿ  B  P  \B  ‡;  ÿ  Ù;  P  \B  <  ÿ  ÏB  P  @C  ‡;  ÿ  Ù;  P  @C  <  ÿ  –C  P  $D  ‡;  ÿ  Ù;  P  $D  <  ÿ  ¥D  P  E  ‡;  ÿ  Ù;  P  E  <  ÿ  ¥D  P  òE  ‡;  ÿ  Ù;  P  òE  <  ÿ  (F  P  |F  ‡;  ÿ  Ù;  P  G  ‡;  ÿ  úG  P  G  <  ÿ  ¨G  P   H  ‡;  ÿ  úG  P   H  <  ÿ  êH  P  ‰H  ‡;  ÿ  úG  P  tI  ‡;  ÿ  úG  P  tI  <  ÿ  J  P  XJ  ‡;  ÿ  úG  P  XJ  <  ÿ  J  P  ËJ  ‡;  ÿ  úG  P  xK  ‡;  ÿ  L  P  xK  <  ÿ  L  P  lL  ‡;  ÿ  L  P  lL  <  ÿ  ¸L  P  PM  ‡;  ÿ  L  P  PM  <  ÿ  ‡M  P  4N  ‡;  ÿ  ƒN  P  4N  <  ÿ  ‘N  P  (O  ‡;  ÿ  ƒN  P  (O  <  ÿ  ∏O  P  P  ‡;  ÿ  ƒN  P  P  <  ÿ  ∏O  P  úP  ‡;  ÿ  ƒN  P  úP  <  ÿ  ,Q  P  ÄQ  ‡;  ÿ  ƒN  P  ÄQ  <  ÿ  R  P  dR  ‡;  ÿ  ƒN  P  dR  <  ÿ  R    ¥9  (S  –*  ∏*  ,  ‡  ÿ  Ã2  ÿ  ®S  P  ¸S  ÿ  ÿ  \T  P  îT  ÿ  ÿ  U  P  îT  î  ÿ  ∏  XU  XU      å   ò     ≈   ¨          !     œ   x!       L8        9  